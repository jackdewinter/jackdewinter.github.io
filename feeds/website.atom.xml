<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jack's Digital Workbench - Website</title><link href="https://jackdewinter.github.io/" rel="alternate"></link><link href="https://jackdewinter.github.io/feeds/website.atom.xml" rel="self"></link><id>https://jackdewinter.github.io/</id><updated>2020-04-05T00:00:00-07:00</updated><entry><title>What is the Audience for my Blog?</title><link href="https://jackdewinter.github.io/2020/04/05/what-is-the-audience-for-my-blog/" rel="alternate"></link><published>2020-04-05T00:00:00-07:00</published><updated>2020-04-05T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2020-04-05:/2020/04/05/what-is-the-audience-for-my-blog/</id><summary type="html">
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;From my experience, the two most critical components for learning are: the focus and
desire to learn; and the ability to seek out, handle, and then learn from constructive
criticism obtained from people that are more experienced.  It is primarily the people
that I have seen employ both of …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;From my experience, the two most critical components for learning are: the focus and
desire to learn; and the ability to seek out, handle, and then learn from constructive
criticism obtained from people that are more experienced.  It is primarily the people
that I have seen employ both of those components in unison that I have seen learn and
excel in their fields.&lt;/p&gt;
&lt;p&gt;From the day last summer when I started writing this blog until today, I believe I have
proven to myself that I have the focus to continue writing and the desire to keep on
writing.  It was when I reached out to some friends and colleagues in the writing field
for constructive criticism that they all asked the same question: “What is the audience
for your articles?”&lt;/p&gt;
&lt;h2 id="thinking-about-that-question"&gt;Thinking About That Question&lt;a class="headerlink" href="#thinking-about-that-question" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Wow.  It was a pretty obvious question, but at the same time, it was one that I just
assumed I knew the answer to.  As I started to write this article, I just assumed that
the words would just flow out of my fingers…&lt;/p&gt;
&lt;p&gt;Until they didn’t.&lt;/p&gt;
&lt;p&gt;Instead, I sat at the keyboard for a long while, with a flood of thoughts going through
my head.  I was pretty sure I was not doing the blog for attention, but what was it
really that drove me to take the day or two out of my week to write these blog posts?
To get my thoughts out of my head, I started writing different parts of different
paragraphs that were prototypes for this article.  In the end, each one seemed like it
was scratching at the service, not really answering the question.&lt;/p&gt;
&lt;p&gt;To be clear, none of those paragraphs made it to this final version of the article. In
any form.  Not even remotely.  I knew I had to come up with an answer, but I was hitting
a wall. And try as I might, I was not making any progress.  It was frustrating… very
frustrating.&lt;/p&gt;
&lt;p&gt;It was while doing something totally unrelated that I remembered a conversation with a
colleague about elevator pitches.  The general idea behind elevator pitches is that in
the 30-45 seconds that you have with someone in an elevator, you can pitch them an
idea that is comprised of the 2-3 sentences that are the distillation of the most
important points to get across about your idea.  If you want to successfully get the
other person’s attention, you need to “hook” them before those elevator doors open and
their attention is no longer focused on you, but what is outside of the elevator doors.&lt;/p&gt;
&lt;p&gt;To me, this concept seems to contain some basic truths.  There are a fair number of
talented people that can briefly capture your attention by coming up with flowery words
about their ideas, but those ideas usually end up just being smoke and mirrors.  In
response, when people start seeing those kinds of words and sentences coming their way,
their experience trains them to disregard a lot of what you are saying.
Based on personal experience, this decision is made within the first 3-5 sentences that
you speak to the other person.  Therefore, if you honestly have something meaningful to
say, you should be
able to describe it in a short and powerful burst that is simple and straightforward,
containing the most important parts of what you want to say.&lt;/p&gt;
&lt;p&gt;So, how could I apply that concept to the question of audience and how I would answer
it?&lt;/p&gt;
&lt;h2 id="what-is-my-goal"&gt;What Is My Goal?&lt;a class="headerlink" href="#what-is-my-goal" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It took my quite the while.  But ultimately, for me and my blog, it boils down to this:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I want my blog to inspire people and help them learn, like people have inspired and helped me in the past.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It may seem simple and altruistic, but that is the heart of what I want to accomplish.
Not a lot of flowery words.  Not a lot of meaningless sentences.  Just a simple
statement of what I want to accomplish with my blog.&lt;/p&gt;
&lt;p&gt;It was a good start on what I wanted to accomplish, but I still needed more.&lt;/p&gt;
&lt;h2 id="how-do-i-accomplish-that-goal"&gt;How do I accomplish that goal?&lt;a class="headerlink" href="#how-do-i-accomplish-that-goal" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Having a good statement of my goal, I needed to figure out how my blog was going to
accomplish that goal, thereby further defining the audience.&lt;/p&gt;
&lt;p&gt;Based on my stated goal, I started thinking about the blogs that I usually read.
Writing some of those blogs down, I found there were two categories that emerged: ones
that I use as a point-in-time resource and ones that I read and learn from.  From my
point of view, a lot of the blogs and sources out there present the information
necessary to solve an
immediate problem, but not a lot them offer insight as to how the authors arrived at
that solution or what the alternatives are.&lt;/p&gt;
&lt;p&gt;To be clear, that isn’t always a problem.  I use sites like
&lt;a href="https://stackoverflow.com"&gt;Stack Overflow&lt;/a&gt; all
of the time to get help with a particular situation.  However, in terms of being a site
that I learn from, Stack Overflow will rarely be one of them. In contrast, the blogs
and sites
that I keep on going back to are ones that offer that additional insight and help me
learn through that insight.  They provide something to me above and beyond the normal
solutions to problems that are documented on other sites.&lt;/p&gt;
&lt;p&gt;But what exactly was it about those blogs that helped me learn?  What were their
hooks?  And more importantly, what was the way in which I was going to do this for
people reading my blog?&lt;/p&gt;
&lt;p&gt;Thinking about that information for a long while, and then distilling it down to its
essence, I expanded on my stated goal from above to include be a more complete answer.&lt;/p&gt;
&lt;h2 id="what-is-the-audience-for-my-blog"&gt;What Is the Audience For My Blog?&lt;a class="headerlink" href="#what-is-the-audience-for-my-blog" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;I want my blog to inspire people and help them learn, like people have inspired and helped me in the past.  For technical articles, I feel that I can best do that by focusing more on the &lt;code&gt;why&lt;/code&gt; and &lt;code&gt;how&lt;/code&gt; of the decisions leading up to the solutions rather than the &lt;code&gt;what&lt;/code&gt; of the solutions themselves.  For other articles, I feel that I can best do that by being an honest and believable storyteller, helping people to understand issues and situations as I see them.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="wrap-up"&gt;Wrap Up&lt;a class="headerlink" href="#wrap-up" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It was an interesting process for me to try and summarize a whole lot of thoughts about
why I write my blog and reduce them down to 3 sentences.  The above lines took a number
of days to arrive at, with lots of writing, even more editing of those words, and even
more distillation of those edited words until I got down to the plain and simple
sentences that I arrived at.&lt;/p&gt;
&lt;p&gt;I hope those two sentences help explain what I see as the audience for my blog.&lt;/p&gt;</content><category term="Website"></category><category term="website"></category><category term="audience"></category></entry><entry><title>Website Soft Launch!</title><link href="https://jackdewinter.github.io/2019/12/01/website-soft-launch/" rel="alternate"></link><published>2019-12-01T00:00:00-08:00</published><updated>2019-12-01T00:00:00-08:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-12-01:/2019/12/01/website-soft-launch/</id><summary type="html">
&lt;p&gt;Well, it took a lot of work, but the website is finally tuned up the way I want it to be!&lt;/p&gt;
&lt;p&gt;I still have a number of small things to do to get the website up and running at 100%.
However, I am doing this soft-launch to start publishing articles …&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Well, it took a lot of work, but the website is finally tuned up the way I want it to be!&lt;/p&gt;
&lt;p&gt;I still have a number of small things to do to get the website up and running at 100%.
However, I am doing this soft-launch to start publishing articles on a regular basis
instead of batching them up.  In the
&lt;a href="https://www.graylog.org/resources/crawl-walk-run"&gt;crawl-walk-run model&lt;/a&gt;,
this is me moving my website from the crawl stage to the walk stage.&lt;/p&gt;
&lt;p&gt;The website itself was mostly ready about 2-3 weeks ago, near the start of November.  But
as this is something public with my name attached to it, I wanted this soft-launch to be
a good representation of what I can do and what I can say.  As such, I went over the
website with a keen eye for detail during the period.  There were a number of days
where I just went through each individual article, one at a time, looking for something
specific.  On one day, it was making sure the categories were good.  On another, it was
making sure the tags I had selected for each article made sense.  On others, it was just
scanning the articles and making sure they were reflecting my voice.&lt;/p&gt;
&lt;p&gt;As this is a learning experience for me, please visit the pages on the site and leave
constructive comments about the content or the style!  Remember that everyone has had
help learning things in their live, and pay it forward!&lt;/p&gt;</content><category term="Website"></category><category term="pelican website generator"></category><category term="website soft-launch"></category></entry><entry><title>Fine Tuning Pelican: Getting Ready For a Soft-Launch</title><link href="https://jackdewinter.github.io/2019/11/03/fine-tuning-pelican-getting-ready-for-a-soft-launch/" rel="alternate"></link><published>2019-11-03T00:00:00-07:00</published><updated>2019-11-03T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-11-03:/2019/11/03/fine-tuning-pelican-getting-ready-for-a-soft-launch/</id><summary type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the webpage.&lt;/p&gt;
&lt;p&gt;Unlike my series on &lt;a href="https://jackdewinter.github.io/2019/08/18/static-websites-choosing-a-static-web-site-generator/"&gt;Choosing and Setting Up Pelican&lt;/a&gt;,
these articles are intended to be byte sized, addressing specific fine tunings I made to
my own website. As such, the first article in this series contains a
&lt;a href="https://jackdewinter.github.io/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/#disclaimer"&gt;Disclaimer section&lt;/a&gt; with generic information
for each of the articles in the series.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Through the previous 11 articles, I have detailed the various fine tuning that I have
done on my website as I get it ready to publish.  Having completed and tested most of
the preparations to get the website ready for a soft-launch, it was time to think long
and hard about what categories and tags to use, and the rules going forward for both.
For me, having those two concepts right is going to help me shape the voice of my
website and really dial in the content I want to deliver.  This article details the
steps I took to take those final steps towards publishing.&lt;/p&gt;
&lt;h2 id="write-some-starter-articles"&gt;Write Some Starter Articles&lt;a class="headerlink" href="#write-some-starter-articles" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To make sure that I was not presenting a blank website to any prospective readers, I
made sure to write a number of articles to have preloaded for the website’s soft launch.
I am not sure if others would make the same decision, but my reasoning was this: how
can I invite readers to my website if there is nothing to read?&lt;/p&gt;
&lt;p&gt;I am aware that my writing skill is passable and I am frequently reminded that I am
somewhat stubborn.  Between these two concepts, it took me a long while to find my voice
and come up with some ideas on what I wanted to write.  For each of the articles
published on this website before this date, there were probably 2-3 times as
many articles that “died” before they were finished, and another 2-3 times that died
before the first sentence was written.&lt;/p&gt;
&lt;p&gt;At first I thought this was a bit of a failure, but then I remembered some words from a
talk on photography that encouraged people to take 100 pictures, just to find the 1 or 2
pictures that were good.  The speaker went on to mention that as he gained more
experience, he still took 100 pictures, but the number of good pictures increased to the
point where his “good picture percentage” is now about 20%… and he is happy with that.
He went on to say that the most important things he learned were to take better pictures
and to not waste time on the picture that were not going to turn out.&lt;/p&gt;
&lt;h2 id="how-does-that-relate-to-article-writing"&gt;How Does That Relate To Article Writing?&lt;a class="headerlink" href="#how-does-that-relate-to-article-writing" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Relating that back to my article writing, I believe that I am getting better in writing
the articles for three main reasons.  And when I say three main reasons, I am not really
talking about first, second, and third place – I am talking about three reasons that I
feel are almost equal in importance.&lt;/p&gt;
&lt;p&gt;The first reason is that like the photographer, I needed experience to grow as a writer
and gain confidence with my writing.  If I waited until after the soft-launch of the
website, then all of my learning through articles would be laid out for everyone to see.
From my experience, you only get one chance to make a good first impression… after
that, the good impression have less and less impact.  By gaining that experience before
the launch, it enabled me to make all of the failures I wanted to without worrying about
any first impressions being lost.&lt;/p&gt;
&lt;p&gt;The second reason is that I noticed that the more passionate I was about the subject
matter, the more passionate I was about writing the article.  By reducing the scope of
categories and subjects to the ones that I was most passionate about, my drive to write
a good article, start to finish, was more intense.  While that passion also caused me to
take more time to write the articles (and fuss over them like crazy), when each article
was done, I sincerely feel like I have done my best.  No regrets, no what-ifs, but a
strong feeling that I did my best in writing the article the way I did.&lt;/p&gt;
&lt;h2 id="properly-scoping-my-categories"&gt;Properly Scoping My Categories&lt;a class="headerlink" href="#properly-scoping-my-categories" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Stemming in part from the second reason above, the third reason that I think I got better
with the articles was that I narrowed the scope of the article topics from “anything I
want to say” to a small number of categories.  By focusing on a smaller and more focused
number of categories, I can afford to be more passionate about them.  I know that these
categories may change over time, but I am going to keep it to 5 categories or less.&lt;/p&gt;
&lt;p&gt;This part was not as easy as I thought, but also not as difficult.  As I wrote the
articles, I started noticing trends on which articles were making it further along and
kept notes and ideas for new articles.  If the category was a good one, I was picking
up speed in writing the articles.  Another good indicator was how easy it was to come
up with new articles for that category, along with a 3-4 sentence “sketch” on what the
article should be about.  It did take me a bit of time to recognize it, but in
retrospect, it was obvious what the categories should have been from the start.&lt;/p&gt;
&lt;h2 id="determining-good-rules-for-tags"&gt;Determining Good Rules for Tags&lt;a class="headerlink" href="#determining-good-rules-for-tags" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The last thing I needed to figure out before a soft-launch was the tags.  Unlike the
categories where I have a number of preset categories to create articles in, the tags
are present to allow for better identification of what topics or concepts are in an
article.  This in turn allows a reader to click on one of the tags displayed for an
article and see what other articles are listed there.&lt;/p&gt;
&lt;p&gt;Whereas for my website the categories are more or less fixed, the first rule I came up
with is that the tags should be fluid and truly represent the article.  If I want readers
to be able to find similar articles, I want to build trust that if I say an article is
tagged with a given word or phrase, it will directly reference that tag.  On my travels
through the internet, there is nothing more disappointing that following a link about
something you are researching, only to find that that the data you were promised is only
1 sentence in an article.  I don’t want that for my website.&lt;/p&gt;
&lt;p&gt;The second rule that I wrote for myself might seem stupid or silly, but a tag should
not be the same or similar to an existing category.  Before going through my articles
for my soft-launch, there were a number of times where that duplication existed.  Now,
often that was due to me not having the first rule in place when authoring those
articles, but it still happened.  This should be an easy one to follow.&lt;/p&gt;
&lt;p&gt;Finally, the last rule that I came up in preparation for the soft-launch was that tags
will be descriptive without being too verbose.  When I picture this rule in my mind,
what I usually think of is 2 words, where one is an adjective and the other is a noun.
While this can sometimes get to 3 words, I don’t want it to extend past there as that
is descending quickly into the verbose category.  As an example, “website” is a bad tag
as it does not describe what kind of website I am talking about.  On the other side,
“how to write a better website” is too verbose, practically being it’s own sentence. In
between is “writing better websites” which seems to strike a good balance between the
two for me.&lt;/p&gt;
&lt;h2 id="what-was-accomplished"&gt;What Was Accomplished&lt;a class="headerlink" href="#what-was-accomplished" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Using the other articles in this series as a jumping off point, this article focuses on
getting the categories and tags right across the articles.  I talked briefly about my
philosophy about preloading the site with articles, both to gain experience in writing
articles and to determine which articles were the right articles for me to write about.
As a natural result of that work, I was able to determine a good initial set of
categories for my website, encompassing the topics that I am most passionate about,
hopefully ensuring that my best work will be put forward.  Finally, I came up with a
number of initial rules about tags to help readers of my website find related content
on my website with a minimum of effort.&lt;/p&gt;</content><category term="Website"></category><category term="pelican website generator"></category><category term="pelican fine tuning"></category><category term="python"></category><category term="website soft-launch"></category></entry><entry><title>Fine Tuning Pelican: Enabling Website Crawling</title><link href="https://jackdewinter.github.io/2019/10/30/fine-tuning-pelican-enabling-website-crawling/" rel="alternate"></link><published>2019-10-30T00:00:00-07:00</published><updated>2019-10-30T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-10-30:/2019/10/30/fine-tuning-pelican-enabling-website-crawling/</id><summary type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the webpage.&lt;/p&gt;
&lt;p&gt;Unlike my series on &lt;a href="https://jackdewinter.github.io/2019/08/18/static-websites-choosing-a-static-web-site-generator/"&gt;Choosing and Setting Up Pelican&lt;/a&gt;,
these articles are intended to be byte sized, addressing specific fine tunings I made to
my own website. As such, the first article in this series contains a
&lt;a href="https://jackdewinter.github.io/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/#disclaimer"&gt;Disclaimer section&lt;/a&gt; with generic information
for each of the articles in the series.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Many forms of website crawling are fraught with copyright issues and may be considered
unethical, as is discussed in this article on
&lt;a href="https://www.promptcloud.com/blog/data-crawling-and-extraction-ethics/"&gt;Data Crawling and Ethics&lt;/a&gt;.  In contrast, there are legal and ethical uses
for web crawling, such as providing the data to search engines such as
&lt;a href="https://www.google.com"&gt;Google&lt;/a&gt; and &lt;a href="https://www.bing.com"&gt;Bing&lt;/a&gt;.  While Search Engine
Registration and Optimization is covered in another article, it is worthwhile to ensure
that the website is properly set up to regulate any web crawling that does occur.  This
article details the setup required to enable this regulation.&lt;/p&gt;
&lt;h2 id="why-use-a-robotstxt-file"&gt;Why Use A Robots.Txt File?&lt;a class="headerlink" href="#why-use-a-robotstxt-file" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://www.robotstxt.org/robotstxt.html"&gt;Robots Exclusion Protocol&lt;/a&gt; has been around
for almost as long as webservers.  As described in the protocol, it manifests itself as
a specially formatted &lt;code&gt;robots.txt&lt;/code&gt; file located in the base directory of the webserver.
While this protocol is not enforceable and remains a suggestion for
web crawlers, it does provide for the rules that you have for “proper” crawlers accessing
your website.&lt;/p&gt;
&lt;p&gt;For my website, this file exists in the content directory at &lt;code&gt;/extras/robots.txt&lt;/code&gt; and
has the following configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;User-agent: *
Disallow:

Sitemap: https://jackdewinter.github.io/sitemap.xml
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This instructs any web crawler that is behaving properly of 3 important facts about the
website.  The first instruction is that the website is okay with crawlers representing
any user agents are allowed to access the site.  The second instruction is that there
are no paths in the webserver that web crawlers are not allowed to access.  Finally,
the third instruction provides the web crawler with the location of the website’s
sitemap, detailing the location of each page on the website.&lt;/p&gt;
&lt;p&gt;These pieces of information are important for different reasons.  The first two pieces of
information are meant to restrict web crawlers from accessing the site, if so informed.
In the case of this configuration, the &lt;code&gt;*&lt;/code&gt; value for the &lt;code&gt;user-agent&lt;/code&gt; field means that
all user agents are allowed, and the empty value for the &lt;code&gt;disallow&lt;/code&gt; field means that no
parts of the website are disallowed.  Between these two instructions, a web crawler
can correctly determine that it is allowed to access any webpage on the website,
appearing as any type of web browser or web crawler.&lt;/p&gt;
&lt;h2 id="how-to-publish-the-robotstxt-file"&gt;How To Publish The Robots.txt File&lt;a class="headerlink" href="#how-to-publish-the-robotstxt-file" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Publishing the &lt;code&gt;robots.txt&lt;/code&gt; file requires two separate bits of configuration to ensure
it is done properly.  The first bit of configuration modifies the existing
&lt;code&gt;STATIC_PATHS&lt;/code&gt; value to add the path &lt;code&gt;extra/robots.txt&lt;/code&gt; to the list of directories and
files to publish without modification.  The second bit of configuration specifies that
the file at the path &lt;code&gt;extra/robots.txt&lt;/code&gt;, when published without any modifications, will
be located at the path &lt;code&gt;/robots.txt&lt;/code&gt; at the webserver’s root.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'extra/robots.txt'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'extra/robots.txt'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'/robots.txt'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="publishing-the-sitemap"&gt;Publishing the Sitemap&lt;a class="headerlink" href="#publishing-the-sitemap" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Generating a sitemap for Pelican is accomplished by adding the &lt;code&gt;sitemap&lt;/code&gt; plugin to the
&lt;code&gt;PLUGINS&lt;/code&gt; configuration variable as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'sitemap'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As detailed in the
&lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/sitemap"&gt;sitemap plugin documentation&lt;/a&gt;, while there are defaults for the sitemap, it is always better to specify actual
values for each specific website.  The values used for my website are as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'format'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'xml'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'priorities'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'articles'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'indexes'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'pages'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;'changefreqs'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'articles'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'weekly'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'indexes'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'weekly'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'pages'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'monthly'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In short, the configuration specifies that the format is &lt;code&gt;xml&lt;/code&gt;, producing a
&lt;code&gt;/sitemap.xml&lt;/code&gt; file.  The priorities of scanning are articles, then indexes, then pages,
with change frequencies roughly backing up the priorities.  For my website, the thought
behind the values is that articles, and the indices they are part of, will be updated on
a weekly frequency while pages will vary rarely changed.&lt;/p&gt;
&lt;h2 id="what-was-accomplished"&gt;What Was Accomplished&lt;a class="headerlink" href="#what-was-accomplished" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The purpose of this article was to detail the configuration for my website that supports
crawling of the site for information.  The first part of this configuration enabled the
creation of a &lt;code&gt;robots.txt&lt;/code&gt; file and publishing that file as part of the website.  The
second part of the configuration added the &lt;code&gt;sitemap&lt;/code&gt; plugin and tailored the sitemap
configuration for the specific balances for my website.  Together, this configuration
makes me feel confident that the website is well configured for web crawlers,
specifically search engines.&lt;/p&gt;</content><category term="Website"></category><category term="pelican website generator"></category><category term="pelican fine tuning"></category><category term="python"></category><category term="pelican website crawling"></category><category term="pelican sitemap"></category></entry><entry><title>Fine Tuning Pelican: Connecting with Readers</title><link href="https://jackdewinter.github.io/2019/10/27/fine-tuning-pelican-connecting-with-readers/" rel="alternate"></link><published>2019-10-27T00:00:00-07:00</published><updated>2019-10-27T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-10-27:/2019/10/27/fine-tuning-pelican-connecting-with-readers/</id><summary type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the webpage.&lt;/p&gt;
&lt;p&gt;Unlike my series on &lt;a href="https://jackdewinter.github.io/2019/08/18/static-websites-choosing-a-static-web-site-generator/"&gt;Choosing and Setting Up Pelican&lt;/a&gt;,
these articles are intended to be byte sized, addressing specific fine tunings I made to
my own website. As such, the first article in this series contains a
&lt;a href="https://jackdewinter.github.io/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/#disclaimer"&gt;Disclaimer section&lt;/a&gt; with generic information
for each of the articles in the series.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One of the most important things for a website to focus on is to connect to the people
that are viewing the website.  That focus is usually geared towards the readers that are
attracted to the website’s content and retaining that focus.  To retain this connection,
a website needs to employ a number of tools to engage the readers and maintain their
attention.  Without employing these tools, any readers of the site will be transient and
unlikely to return.  This article discusses the tools that my website uses to engage and
attempt to retain readers.&lt;/p&gt;
&lt;h2 id="social-media"&gt;Social Media&lt;a class="headerlink" href="#social-media" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As social media is so pervasive in today’s society, it is pivotal to add links
to your social media accounts, as detailed in the Elegant article on
&lt;a href="https://next.elegant.oncrashreboot.com/how-to-display-your-social-media-profiles"&gt;displaying social media profiles&lt;/a&gt;.  For my website, that configuration boiled
down to the following configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SOCIAL_PROFILE_LABEL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;'Stay in Touch'&lt;/span&gt;

&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GitHub'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'https://github.com/jackdewinter'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'github-alt'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'linkedin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'https://www.linkedin.com/in/jackdewinter/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"linkedin"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'RSS'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'https://jackdewinter.github.io/feeds/all.atom.xml'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Together, these configuration settings provide for the &lt;code&gt;Stay in Touch&lt;/code&gt; section at the
bottom of the right sidebar, containing icons that will take you to social media
associated with the website.  The one outlier to this is the RSS icon that appears at the
end of the other icons.  While technically not a form of social media, by following the
&lt;a href="https://next.elegant.oncrashreboot.com/how-to-show-rss-feeds-icon"&gt;Elegant steps outlined here&lt;/a&gt;,
this useful icon is added and placed in a location that is easily accessible for any
readers to use in their automation.&lt;/p&gt;
&lt;h2 id="allow-readers-to-comment"&gt;Allow Readers To Comment&lt;a class="headerlink" href="#allow-readers-to-comment" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To establish a sense of community and utility with the website, it is important to allow
readers to make comments on your articles.  While some of those comments may not always
seem nice, it is important to try and engage with each reader’s comment, and figure out
a positive manner in which to respond to it.&lt;/p&gt;
&lt;p&gt;While Pelican does not support any commenting system itself, the Elegant theme has
supported &lt;a href="https://disqus.com/"&gt;Disqus&lt;/a&gt; for a long time, and recently added support for
&lt;a href="https://utteranc.es/"&gt;Utterances&lt;/a&gt;.  Going through the obvious features of each of
these platforms, I quickly constructed the following table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Disqus&lt;/th&gt;
&lt;th&gt;Utterances&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;paid tiers&lt;/td&gt;
&lt;td&gt;free (backed by GitHub)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;register with Disqus&lt;/td&gt;
&lt;td&gt;register with GitHub&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;savvy readers may already have GitHub account&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Based on that information, choosing Utterances was an easy choice for me.
Registering with Utterances is also easy, with Elegant having taken care of a number of
the steps for us.&lt;/p&gt;
&lt;h3 id="enabling-utterances-for-the-repository"&gt;Enabling Utterances For The Repository&lt;a class="headerlink" href="#enabling-utterances-for-the-repository" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Going to the &lt;a href="https://utteranc.es/"&gt;Utterances website&lt;/a&gt;, my first pass at trying to
figure out how to register was an utter bust, and I confess that I was somewhat
confused.  Taking a step back, I was able to figure out the following flow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;made sure I have a GitHub account&lt;/li&gt;
&lt;li&gt;went to the &lt;a href="https://github.com/apps/utterances"&gt;Utterance application page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;clicked on the &lt;code&gt;Configure&lt;/code&gt; button at the top right of the page&lt;/li&gt;
&lt;li&gt;picked the User or Group containing the project where the target repository for the comments is&lt;/li&gt;
&lt;li&gt;my repository for the website is &lt;code&gt;jackdewinter\jackdewinter.github.io&lt;/code&gt;, so I selected &lt;code&gt;jackdewinter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;verified my access to setup the account by providing the password&lt;/li&gt;
&lt;li&gt;this verification may not occur if you have verified your access within the last 10-15 minutes&lt;/li&gt;
&lt;li&gt;selected the repository &lt;code&gt;jackdewinter.github.io&lt;/code&gt; from the drop-down list&lt;/li&gt;
&lt;li&gt;pressed the &lt;code&gt;Save&lt;/code&gt; button to save these changes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While I was able to get this flow right on the first try, it did take me an additional
time or two to get the flow documented correctly.  Other than that, it was really easy to
setup, with no misleading steps along the way.&lt;/p&gt;
&lt;h3 id="enabling-utterances-in-elegant"&gt;Enabling Utterances In Elegant&lt;a class="headerlink" href="#enabling-utterances-in-elegant" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Once I had the GitHub portion of Utterances set up, it was time to setup Elegant to make
use of that setup.  Following Elegant’s article on
&lt;a href="https://next.elegant.oncrashreboot.com/enable-utterances-comments"&gt;Comments - Enabling Utterances&lt;/a&gt;, I quickly came up with the following configuration changes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;UTTERANCES_REPO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"jackdewinter/jackdewinter.github.io"&lt;/span&gt;
&lt;span class="n"&gt;UTTERANCES_LABEL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Comments"&lt;/span&gt;
&lt;span class="n"&gt;UTTERANCES_FILTER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;UTTERANCES_THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"github-light"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order of appearance in the above code block, the comments will appear as issues in
the GitHub repository &lt;code&gt;jackdewinter/jackdewinter.github.io&lt;/code&gt; tagged with the label
&lt;code&gt;Comments&lt;/code&gt;.  At the bottom of each article, the &lt;code&gt;Comments&lt;/code&gt; section is not be filtered
out by default, shown to the reader using the &lt;code&gt;github-light&lt;/code&gt; theme.&lt;/p&gt;
&lt;p&gt;With these configuration settings in place, a quick publishing and hosting of the website
showed that comments were now enabled for articles!&lt;/p&gt;
&lt;h3 id="testing-utterances"&gt;Testing Utterances&lt;a class="headerlink" href="#testing-utterances" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With the configuration in place, I performed a couple of quick tests of the newly
installed comment system.  Picking an article at random, I scrolled down to the bottom
where a &lt;code&gt;Comments&lt;/code&gt; section awaited me.  Signing in through GitHub, I was then able to
leave a comment that was persisted after a couple of page refreshes.&lt;/p&gt;
&lt;p&gt;Opening a new tab in the same browser, I navigated over to my &lt;code&gt;jackdewinter.github.io&lt;/code&gt;
repository and clicked on the &lt;code&gt;Issues&lt;/code&gt; button to open the Issues page for the repository.
There under the Issues section was the URL of article that I selected with a &lt;code&gt;Comments&lt;/code&gt;
label on it.  Opening up the issue, I was greeted with the test comments that I had
entered previously.&lt;/p&gt;
&lt;h3 id="tuning-utterances"&gt;Tuning Utterances&lt;a class="headerlink" href="#tuning-utterances" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;After reading the other articles in that section of the Elegant documentation, two other
articles leapt out as being useful.  During testing, I had noticed that there weren’t any
text or images that separated the article from the comments, and I wanted to change that.
The article on
&lt;a href="https://next.elegant.oncrashreboot.com/invite-visitors-comment"&gt;Comments - Invite Visitors To Comment&lt;/a&gt;
provided a nice way to do this, so I followed their suggestions and made the following
change to the configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;COMMENTS_INTRO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"So what do you think? Did I miss something? Is any part unclear? Leave your comments below."&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another thing that I noticed during testing was that the comments were filed under an
issue with the URL of the article.  I want to be able to make small changes to the
article title if need be, therefore basing the issue on the article’s URL is less than
optimal.  Luckily, the authors of Elegant thought about this problems and have an
article on
&lt;a href="https://next.elegant.oncrashreboot.com/comments-thread-id"&gt;Comments - Thread Id&lt;/a&gt;
that deals with it.&lt;/p&gt;
&lt;p&gt;Without any changes, each issue will be attributed to the URL of the article.  In the
case of this article, that URL ends with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/2019/10/01/fine-tuning-pelican-connecting-with-readers/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By adding the following line to this article’s metadata:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;comment_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fine-tuning-pelican--connecting-with-readers&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the issue that is created for the article is instead &lt;code&gt;fine-tuning-pelican--connecting-with-readers&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="what-was-accomplished"&gt;What Was Accomplished&lt;a class="headerlink" href="#what-was-accomplished" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;At the start of this article, I stressed that a big part about a successful website is
the ability to engage readers and maintain their attention.  The first tool is to use
the social media section of the sidebar that is available with Elegant.  The second tool
is to have an active comment system for each article that is easy to use.  With two small
fine-tunings to the Elegant configuration, both of these tools were configured for the
website, and working great!&lt;/p&gt;
&lt;p&gt;While this was one of the aspects of running a website that I was worried about, having
great documentation from Elegant (
&lt;a href="https://next.elegant.oncrashreboot.com/invite-visitors-comment"&gt;Comments - Invite Visitors To Comment&lt;/a&gt;
)
and
&lt;a href="https://utteranc.es/"&gt;Utterances&lt;/a&gt; made this a snap to setup.&lt;/p&gt;</content><category term="Website"></category><category term="pelican website generator"></category><category term="pelican fine tuning"></category><category term="python"></category><category term="pelican connect readers"></category><category term="pelican comments"></category><category term="utterances"></category></entry><entry><title>Fine Tuning Pelican: Producing RSS Feeds</title><link href="https://jackdewinter.github.io/2019/10/23/fine-tuning-pelican-producing-rss-feeds/" rel="alternate"></link><published>2019-10-23T00:00:00-07:00</published><updated>2019-10-23T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-10-23:/2019/10/23/fine-tuning-pelican-producing-rss-feeds/</id><summary type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the webpage.&lt;/p&gt;
&lt;p&gt;Unlike my series on &lt;a href="https://jackdewinter.github.io/2019/08/18/static-websites-choosing-a-static-web-site-generator/"&gt;Choosing and Setting Up Pelican&lt;/a&gt;,
these articles are intended to be byte sized, addressing specific fine tunings I made to
my own website. As such, the first article in this series contains a
&lt;a href="https://jackdewinter.github.io/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/#disclaimer"&gt;Disclaimer section&lt;/a&gt; with generic information
for each of the articles in the series.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While it may seem counter-intuitive, the mostly text
&lt;a href="https://en.wikipedia.org/wiki/RSS"&gt;RSS Feeds&lt;/a&gt; have experienced a comeback in the last
5-10 years.  Due in large part to a wave of automation, these feeds are mostly set up
for computers to read and process new and existing articles, rather than human readers.
As such, I felt it was important to provide RSS feeds for my website.  This article
describes how to set up RSS feeds for a Pelican website.&lt;/p&gt;
&lt;!--- pyml disable-next-line no-trailing-punctuation --&gt;
&lt;h2 id="strictly-speaking"&gt;Strictly Speaking…&lt;a class="headerlink" href="#strictly-speaking" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For any purists reading this, note that the output that Pelican provides is actually in
the Atom format not pure RSS.  This is not a major issue as most RSS readers will accept
RSS format or Atom format for their readers.  A good article on the differences between
the two is
&lt;a href="http://www.differencebetween.info/difference-between-rss-and-atom"&gt;presented here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="only-generate-feeds-when-publishing"&gt;Only Generate Feeds When Publishing&lt;a class="headerlink" href="#only-generate-feeds-when-publishing" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;During the normal course of writing content, I will often do a simple publish against the
&lt;code&gt;pelicanconf.py&lt;/code&gt; configuration to see how that content looks when rendered.  In my
&lt;code&gt;pelicanconf.py&lt;/code&gt; configuration, the following lines are present:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unless you are actively debugging something to do with RSS feeds, there is no need to
generate these feeds during development.  From a look and feel point of view, each RSS
feed contains the same text as the normally viewed article, with all of the theme
styling and extras removed.  As such, there is usually no benefit to generating the RSS
feed until the final publish step.  That is why the &lt;code&gt;publishconf.py&lt;/code&gt; configuration
includes configuration to override the &lt;code&gt;pelicanconf.py&lt;/code&gt; which enables RSS feed
generation.&lt;/p&gt;
&lt;h2 id="generating-the-right-types-of-rss-feeds"&gt;Generating the Right Types of RSS Feeds&lt;a class="headerlink" href="#generating-the-right-types-of-rss-feeds" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To provide the right types of RSS feeds for my website, I provided the following
configuration in the &lt;code&gt;publishconf.py&lt;/code&gt; files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Feed Items&lt;/span&gt;
&lt;span class="n"&gt;FEED_MAX_ITEMS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'feeds/all.atom.xml'&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'feeds/{slug}.atom.xml'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first line of configuration specifies that none of the feeds should not contain more
than 15 items.  Without this setting, a website with 200 articles would have all 200 of
those articles included in the feed each time the feed was generated.  In addition, when
each feed was downloaded, it would download all 200 articles. For me, this setting
presents a good balance between presenting a decent amount of content and sending too
much data.  It is very unlikely that I will publish more than 15 articles at a time, so
it just seems right.&lt;/p&gt;
&lt;p&gt;The next two lines of configuration enable the “all” feed and the “category” feeds.
The &lt;code&gt;FEED_ALL_ATOM&lt;/code&gt; configuration enables the &lt;code&gt;all.atom.xml&lt;/code&gt; feed to be established at
the location &lt;code&gt;feeds/all.atom.xml&lt;/code&gt;.  This feed contains every article is published, in
reverse order of publication.  The &lt;code&gt;CATEGORY_FEED_ATOM&lt;/code&gt; configuration enables the
individual category feeds, one for each category that exists.  Each on of those feeds is
located at &lt;code&gt;feeds/{slug}.atom.xml&lt;/code&gt; where &lt;code&gt;{slug}&lt;/code&gt; is the category for which the feed is
being generated.&lt;/p&gt;
&lt;p&gt;Based on the above configuration &lt;code&gt;publishconf.py&lt;/code&gt;, when this article was written, the
feeds produced were:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/feeds/all.atom.xml
/feeds/github.atom.xml
/feeds/markdown.atom.xml
/feeds/quality.atom.xml
/feeds/technology.atom.xml
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="what-was-accomplished"&gt;What Was Accomplished&lt;a class="headerlink" href="#what-was-accomplished" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I started with a quick description of why an older protocol such as RSS and Atom are
still good things to have in today’s website world.  I then covered why to not generate
RSS feeds until publish time, followed by how to setup and configure the RSS feeds when
it was publish time.  This effort allowed me to add RSS feeds to my website in a pretty
painless manner, and should allow a reader to perform that same task.&lt;/p&gt;</content><category term="Website"></category><category term="pelican website generator"></category><category term="pelican fine tuning"></category><category term="python"></category><category term="pelican rss feeds"></category></entry><entry><title>Fine Tuning Pelican: Custom Error Pages</title><link href="https://jackdewinter.github.io/2019/10/20/fine-tuning-pelican-custom-error-pages/" rel="alternate"></link><published>2019-10-20T00:00:00-07:00</published><updated>2019-10-20T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-10-20:/2019/10/20/fine-tuning-pelican-custom-error-pages/</id><summary type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the webpage.&lt;/p&gt;
&lt;p&gt;Unlike my series on &lt;a href="https://jackdewinter.github.io/2019/08/18/static-websites-choosing-a-static-web-site-generator/"&gt;Choosing and Setting Up Pelican&lt;/a&gt;,
these articles are intended to be byte sized, addressing specific fine tunings I made to
my own website. As such, the first article in this series contains a
&lt;a href="https://jackdewinter.github.io/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/#disclaimer"&gt;Disclaimer section&lt;/a&gt; with generic information
for each of the articles in the series.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When a webpage is requested that does not exist, it is common for websites to react to
the request by displaying a custom error page.  While Pelican does not natively ship
with this feature, Elegant adds a themed page that does.  This article details the
changes needed to mark Elegant’s custom error page is properly used as “the” error page.&lt;/p&gt;
&lt;h2 id="configuring-elegant-and-github-pages"&gt;Configuring Elegant and GitHub Pages&lt;a class="headerlink" href="#configuring-elegant-and-github-pages" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Following the instructions from the
&lt;a href="https://elegant.oncrashreboot.com/custom-404-page"&gt;Elegant Documentation&lt;/a&gt;,
Elegant can be instructed to generate a properly themed 404 page by adding the &lt;code&gt;404&lt;/code&gt;
string to the &lt;code&gt;DIRECT_TEMPLATES&lt;/code&gt; variable in the &lt;code&gt;pelicanconf.py&lt;/code&gt; file.  After following
those instructions, the next time the website is generated, a &lt;code&gt;404.html&lt;/code&gt; file will be
generated in the base directory.  This file will have all of the trappings of the
Elegant theme, and it will display an error page that includes a box to search for what
the reader was looking for.&lt;/p&gt;
&lt;p&gt;The website hosting service that is being used will dictate if there are any extra steps
needed to enable the custom 404 page.  For GitHub Pages, as long as the file is named
&lt;code&gt;404.html&lt;/code&gt; and is in the root directory that is being hosted, GitHub will automatically
pick it up and use it as the 404 error page.  Note that it seems like the file must
exist on the &lt;code&gt;master&lt;/code&gt; branch of the GitHub Pages directory in order for that action to
take effect.&lt;/p&gt;
&lt;h2 id="using-other-themes"&gt;Using Other Themes&lt;a class="headerlink" href="#using-other-themes" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you are using a theme other than Elegant, you can replicate some of the behavior that
Elegant provides out of the box.  In particular, you can define a page called
&lt;code&gt;markdown.md&lt;/code&gt; somewhere in your contents, and add the following text to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;---&lt;/span&gt;
&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;Custom&lt;/span&gt; &lt;span class="n"&gt;Page&lt;/span&gt;
&lt;span class="n"&gt;permalink&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;
&lt;span class="c1"&gt;---&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The key to this being used as an error page is the &lt;code&gt;permalink: /404.html&lt;/code&gt; part of the
markdown header.  This informs Pelican to always publish the page with output file of
&lt;code&gt;/404.html&lt;/code&gt;, placing it in the root directory where it will be picked up properly by
many site publishers, such as GitHub Pages.&lt;/p&gt;
&lt;h2 id="what-was-accomplished"&gt;What Was Accomplished&lt;a class="headerlink" href="#what-was-accomplished" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this article, I provided some quick information on how to set up a custom 404 page
using Elegant, and noted how it will be picked up by GitHub Pages.  I also provided some
basic information on how to set up a custom page for themes other then Elegant.  By
using this approach, I was able to have a custom error page that had the theme of my
website, allowing the reader to recover in case of a bad URL.&lt;/p&gt;</content><category term="Website"></category><category term="pelican website generator"></category><category term="pelican fine tuning"></category><category term="python"></category><category term="custom error page"></category><category term="github pages"></category></entry><entry><title>Fine Tuning Pelican: Markdown Configuration</title><link href="https://jackdewinter.github.io/2019/10/16/fine-tuning-pelican-markdown-configuration/" rel="alternate"></link><published>2019-10-16T00:00:00-07:00</published><updated>2019-10-16T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-10-16:/2019/10/16/fine-tuning-pelican-markdown-configuration/</id><summary type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the webpage.&lt;/p&gt;
&lt;p&gt;Unlike my series on &lt;a href="https://jackdewinter.github.io/2019/08/18/static-websites-choosing-a-static-web-site-generator/"&gt;Choosing and Setting Up Pelican&lt;/a&gt;,
these articles are intended to be byte sized, addressing specific fine tunings I made to
my own website. As such, the first article in this series contains a
&lt;a href="https://jackdewinter.github.io/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/#disclaimer"&gt;Disclaimer section&lt;/a&gt; with generic information
for each of the articles in the series.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When choosing authoring tools for a website, a primary concern is that the tools are
either already used by the authors or easy enough to learn by the authors that it does
not allow them to write freely.  For me, I regularly author documentation in Markdown
using Visual Studio Code for my professional job, so using the same tools for my website
was an easy choice. However, unlike the documents I write at work, the Pelican generator
utilizes the &lt;a href="https://python-markdown.github.io/"&gt;Python-Markdown generator library&lt;/a&gt;
which has a few more options than standard Markdown.  This article details the Markdown
configuration that I have enabled for my website, and why I have enabled the specified
configuration.&lt;/p&gt;
&lt;h2 id="markdown-configuration"&gt;Markdown Configuration&lt;a class="headerlink" href="#markdown-configuration" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The following configuration is the Markdown configuration for my website:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;MARKDOWN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'extension_configs'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'markdown.extensions.extra'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
        &lt;span class="s1"&gt;'markdown.extensions.admonition'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
        &lt;span class="s1"&gt;'markdown.extensions.codehilite'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;'css_class'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'highlight'&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s1"&gt;'markdown.extensions.meta'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
        &lt;span class="s1"&gt;'smarty'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;'smart_angled_quotes'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'true'&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s1"&gt;'markdown.extensions.toc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;'permalink'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'true'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="markdownextensionsmeta"&gt;markdown.extensions.meta&lt;a class="headerlink" href="#markdownextensionsmeta" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This configuration is perhaps the most important extension that I use.  This setting
enables the
&lt;a href="https://python-markdown.github.io/extensions/meta_data/"&gt;Python-Markdown - Metadata&lt;/a&gt;
feature which enables the processing of the header of Markdown files with metadata about
the Markdown that is being authored.  While the Python-Markdown processor does not use
this metadata itself, the metadata is passed to Pelican and Elegant to allow for
configuration of the articles and pages on a one-by-one basis.&lt;/p&gt;
&lt;p&gt;This choice is actually a requirement for Pelican to work, being provided as one of the
defaults for the &lt;code&gt;MARKDOWN&lt;/code&gt; configuration element,
&lt;a href="http://docs.getpelican.com/en/stable/settings.html#basic-settings"&gt;as documented here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="markdownextensionsextra"&gt;markdown.extensions.extra&lt;a class="headerlink" href="#markdownextensionsextra" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This configuration enables the
&lt;a href="https://python-markdown.github.io/extensions/extra/"&gt;Python-Markdown - Extra&lt;/a&gt;
features which includes support for: abbreviations, attribute lists, definition lists,
fenced code blocks, footnotes, and tables.&lt;/p&gt;
&lt;p&gt;This choice is actually a requirement for Pelican to work, being provided as one of the
defaults for the &lt;code&gt;MARKDOWN&lt;/code&gt; configuration element,
&lt;a href="http://docs.getpelican.com/en/stable/settings.html#basic-settings"&gt;as documented here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="markdownextensionscodehilite"&gt;markdown.extensions.codehilite&lt;a class="headerlink" href="#markdownextensionscodehilite" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This configuration enables the
&lt;a href="https://python-markdown.github.io/extensions/code_hilite/"&gt;Python-Markdown - Code Hilites&lt;/a&gt;
feature to provide for special displaying of marked text within given areas of the
document.  These sections or specially marked text are typically used to display text
that represents code for programs or scripts, with more stringent rules on how to
display the text.&lt;/p&gt;
&lt;p&gt;If no specific text format is specified with the text block, such as many of the
code blocks in the article on
&lt;a href="https://jackdewinter.github.io/2019/09/01/static-websites-posting-my-first-article/#step-1-verify-our-basic-web-site"&gt;Static Websites: Posting My First Article&lt;/a&gt;.
If a text format is specified, this feature will try it’s best to match it to known
highlighters, using color to indicate different parts of the specified text format.
This can be seen in a later section of the above article where a code block is used for a
&lt;a href="https://jackdewinter.github.io/2019/09/01/static-websites-posting-my-first-article/#step-2-the-first-article"&gt;sample Markdown article&lt;/a&gt;
and later in the series where
&lt;a href="https://jackdewinter.github.io/2019/09/08/static-websites-getting-ready-for-publishing-themes-and-minutiae/#task-2-file-types-and-file-paths"&gt;Python configuration&lt;/a&gt;
is referenced.  In both of these examples, the highlighting done to the text is able to
be changed according to the type of text being highlighted.&lt;/p&gt;
&lt;p&gt;This choice is actually a requirement for Pelican to work, being provided as one of the
defaults for the &lt;code&gt;MARKDOWN&lt;/code&gt; configuration element,
&lt;a href="http://docs.getpelican.com/en/stable/settings.html#basic-settings"&gt;as documented here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="markdownextensionstoc"&gt;markdown.extensions.toc&lt;a class="headerlink" href="#markdownextensionstoc" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This configuration is present as part of the setup for
&lt;a href="https://jackdewinter.github.io/2019/10/13/fine-tuning-pelican-pelican-plugins/#navigable"&gt;Elegant’s Table Of Contents&lt;/a&gt; support. This
specific value instructs the
&lt;a href="https://python-markdown.github.io/extensions/toc/"&gt;Python-Markdown - Table of Contents&lt;/a&gt;
feature to generate permanent links at the end of each header.  These links provide the
destination URLs that Elegant’s Table of Content support use to go directly to a given
item in the Table of Contents.&lt;/p&gt;
&lt;p&gt;I subscribe to Elegant’s philosophy on providing a clean reading experience with minimal
distractions.  By moving the table of contents to the left sidebar and out of the
article, I believe the reader can focus more on the article.&lt;/p&gt;
&lt;h3 id="markdownextensionsadmonition"&gt;markdown.extensions.admonition&lt;a class="headerlink" href="#markdownextensionsadmonition" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This configuration enables the
&lt;a href="https://python-markdown.github.io/extensions/admonition/"&gt;Python-Markdown - Admonition&lt;/a&gt;
feature to provide a highlighted box around the indicated text content.  These
highlighted boxes are themed by Elegant to provide for a good, quick communication of
important information to the reader without being too disruptive. An example of
admonitions is available in this article on
&lt;a href="https://jackdewinter.github.io/2019/07/28/glanceable-displays-fine-tuning-a-raspberry-pi-installation/#requirements"&gt;Glanceable Displays&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I find that using admonitions in articles allows me to include more useful and
descriptive information to the reader.  The options of sections of tests in various
parentheses and braces, or placing the text in footnotes, doesn’t feel right to me,
while admonitions, with their colored call outs do.  This is a personal preference.&lt;/p&gt;
&lt;h3 id="smarty"&gt;smarty&lt;a class="headerlink" href="#smarty" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This configuration enables the
&lt;a href="https://python-markdown.github.io/extensions/smarty/"&gt;Python-Markdown - SmartyPants&lt;/a&gt;
feature to provide for more clear representation of various characters and character
sequences used in articles and pages.&lt;/p&gt;
&lt;p&gt;With this feature enabled, the following substitutions are made:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the apostrophe character (&lt;code&gt;'&lt;/code&gt;) is translated into a left and right single quotes around the words or phrases they surround:  ‘this is my phrase’&lt;/li&gt;
&lt;li&gt;the quotation character (&lt;code&gt;'&lt;/code&gt;) is translated into a left and right double quotes around the words or phrases they surround:  “this is my phrase”&lt;/li&gt;
&lt;li&gt;double greater than signs (&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;) and less than signs (&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;) are translated into angled quotes: « and »&lt;/li&gt;
&lt;li&gt;three period characters in a row (&lt;code&gt;...&lt;/code&gt;) are translated into ellipses: and so they said…&lt;/li&gt;
&lt;li&gt;two consecutive dashes (&lt;code&gt;--&lt;/code&gt;) and three consecutive dashes (&lt;code&gt;---&lt;/code&gt;) are turned into lengthened dash characters: – and —&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While I am not 100% sold on this one, I like the effects it has, even though they are
small.  It just seems to add a bit of a finished touch to the articles.&lt;/p&gt;
&lt;h2 id="what-was-accomplished"&gt;What Was Accomplished&lt;a class="headerlink" href="#what-was-accomplished" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article was created to share the Markdown configuration that I use for my website
For each feature that I use I specify what benefit it provides to the articles, along
with the reasons that have for using that Markdown feature.&lt;/p&gt;</content><category term="Website"></category><category term="pelican website generator"></category><category term="pelican fine tuning"></category><category term="python"></category><category term="pelican markdown configuration"></category></entry><entry><title>Fine Tuning Pelican: Pelican Plugins</title><link href="https://jackdewinter.github.io/2019/10/13/fine-tuning-pelican-pelican-plugins/" rel="alternate"></link><published>2019-10-13T00:00:00-07:00</published><updated>2019-10-13T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-10-13:/2019/10/13/fine-tuning-pelican-pelican-plugins/</id><summary type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the webpage.&lt;/p&gt;
&lt;p&gt;Unlike my series on &lt;a href="https://jackdewinter.github.io/2019/08/18/static-websites-choosing-a-static-web-site-generator/"&gt;Choosing and Setting Up Pelican&lt;/a&gt;,
these articles are intended to be byte sized, addressing specific fine tunings I made to
my own website. As such, the first article in this series contains a
&lt;a href="https://jackdewinter.github.io/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/#disclaimer"&gt;Disclaimer section&lt;/a&gt; with generic information
for each of the articles in the series.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In setting up the website to reflect my decisions on how things should be displayed,
I surveyed a number of plugins to use.  Some of these plugins were chosen as they are
supported by the Elegant theme, and some by Pelican itself.  This article details the
list of the plugins that I use on my own website and why I decided to use them.&lt;/p&gt;
&lt;h2 id="plugins-i-use"&gt;Plugins I Use&lt;a class="headerlink" href="#plugins-i-use" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Pelican plugins help shape the look and feel of a website, but they can also get in the
way of the content creation.  For me, it is important to experiment with plugins to
determine whether or not the plugin and the services it presents enhances either the
content creation or content display in a manner that I will find positive for my website.
If it doesn’t meet that metric with an acceptable cost for meeting that metric, then the
plugin gets discarded quickly.&lt;/p&gt;
&lt;p&gt;For the initial setup of my website, I just went for the standard plugins that work well
with Elegant, keeping it simple for now.&lt;/p&gt;
&lt;h3 id="search"&gt;Search&lt;a class="headerlink" href="#search" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;tipue_search&lt;/code&gt; plugin provides for a simple yet effect method to catalog the text
on the website and to provide for manner in which to search that catalog.  Elegant
exposes this capability using a search box in the top right corner of each webpage.
Instructions on how to configure this plugin are
&lt;a href="https://elegant.oncrashreboot.com/add-tipue-search"&gt;located here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Simply, a website without search would look vary basic, and I wanted to show a finished
product.  For me, Elegant makes it look nice, while being easy to use.&lt;/p&gt;
&lt;h3 id="navigable-table-of-contents"&gt;Navigable Table Of Contents&lt;a class="headerlink" href="#navigable-table-of-contents" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Between the &lt;code&gt;extract_toc&lt;/code&gt; plugin and some Markdown configuration, Pelican can take a
single Markdown tag and generate an accurate table of contents for the article in it’s
place.  Elegant can then take that information out of the main body of the article and
display it on the left sidebar in a manner that does not disrupt the reading of the
article.
Instructions on how to configure this plugin are
&lt;a href="https://elegant.oncrashreboot.com/how-elegant-displays-table-of-contents"&gt;located here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I subscribe to Elegant’s philosophy on providing a clean reading experience with minimal
distractions.  By moving the table of contents to the left sidebar and out of the
article, I believe the reader can focus more on the article.&lt;/p&gt;
&lt;h3 id="series-indicators"&gt;Series Indicators&lt;a class="headerlink" href="#series-indicators" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;series&lt;/code&gt; plugin provides extra information to Pelican’s template engine, to allow
themes to show that an article is part of a series.  Elegant takes that information and
displays the title of the series on the right sidebar, followed by an ordered list of
links to each article in the series.  Instructions on how to configure this plugin are
&lt;a href="https://elegant.oncrashreboot.com/how-to-use-multi-part-plugin"&gt;located here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In a similar vein to how I feel about Elegant displaying the table of contents, having
a series navigation on the right sidebar allows for a ready to have a clean reading
experience while allowing the reader the freedom to navigate within a series of articles.&lt;/p&gt;
&lt;h3 id="previous-and-next-article-links"&gt;Previous And Next Article Links&lt;a class="headerlink" href="#previous-and-next-article-links" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;neighbors&lt;/code&gt; plugin provides the necessary information to determine the neighbors of
the current article, with respect to the time it was written.  Elegant displays this
information as the links are the bottom of the article, to assist in navigation.
Instructions on how to configure this plugin are
&lt;a href="https://elegant.oncrashreboot.com/how-to-show-previous-and-next-article"&gt;located here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Quite simply, having the previous and next article links allow a reader to navigate
backward or forward through articles, without getting in the way of normal reading of
the article.&lt;/p&gt;
&lt;h3 id="sharing-article-links"&gt;Sharing Article Links&lt;a class="headerlink" href="#sharing-article-links" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;share_post&lt;/code&gt; plugin provides information that Elegant than uses to display simple
text links at the end of articles.  These links allow the reader to share this on their
Twitter accounts, through Facebook, or via there email accounts.  The main benefit of
these links are that they allow the reader to share these posts, hopefully attracting
more readers to the website without being tracked.  Many of the other “share”
buttons on other blogs are implement tracking on each link from one website to another,
a practice that doesn’t sit well with every reader. Instructions on how to configure
this plugin are
&lt;a href="https://elegant.oncrashreboot.com/how-to-use-social-sharing-plugin"&gt;located here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The benefit here is easy for me to quantify.  If it is simple and safe to share articles
with their friends, they will naturally share the articles. If readers share articles,
I will get more readers.&lt;/p&gt;
&lt;h3 id="improved-asset-downloads"&gt;Improved Asset Downloads&lt;a class="headerlink" href="#improved-asset-downloads" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;assets&lt;/code&gt; plugin provides for a way for Pelican to take supporting files for the
website, such as CSS files and Javascript files, and combine them into a smaller number
of files.  By performing this ‘minification’, the number of downloads for each page
or article is reduced, and therefore the pages and articles load time is smaller.
Instructions on
how to configure this plugin are
&lt;a href="https://elegant.oncrashreboot.com/avoid-unnecessary-http-requests"&gt;located here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The benefit here is also easy for me to quantify.  From a reader’s point of view, I don’t
want a page taking forever to download… the quicker the better.  From a provider’s
point of view, fewer requests containing fewer bytes means less load on the
infrastructure.&lt;/p&gt;
&lt;h3 id="reading-time-estimate"&gt;Reading Time Estimate&lt;a class="headerlink" href="#reading-time-estimate" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;post_stats&lt;/code&gt; plugin calculates an estimate of the time required to read the article.
Elegant displays this estimate at the top of the right sidebar.  Instructions on how to
configure this plugin are
&lt;a href="https://elegant.oncrashreboot.com/add-reading-time-estimate"&gt;located here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The benefit of this plugin is harder for me to justify, but it falls into my concept of
look-and-feel.  This plugin provides a good estimate as to how long a reader can expect
to take in reading the article, and hence budget enough time for them to read the article
without feeling hurried.&lt;/p&gt;
&lt;h3 id="sitemap"&gt;SiteMap&lt;a class="headerlink" href="#sitemap" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As the &lt;code&gt;sitemap&lt;/code&gt; plugin requires a significant amount of configuration, it is detailed
along with the configuration for the &lt;code&gt;robots.txt&lt;/code&gt; file in the article on
&lt;a href="https://jackdewinter.github.io/2019/10/30/fine-tuning-pelican-enabling-website-crawling/#publishing-the-sitemap"&gt;Fine Tuning Pelican: Enabling Website Crawling&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="what-was-accomplished"&gt;What Was Accomplished&lt;a class="headerlink" href="#what-was-accomplished" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This article walked through the plugins that I currently use for my website, what they
are for, and how to install them.  To add extra context to each plugin, I also detailed
some of the reasons why I selected to use a given plugin, with it’s benefits to me.&lt;/p&gt;</content><category term="Website"></category><category term="pelican website generator"></category><category term="pelican fine tuning"></category><category term="python"></category><category term="pelican plugins"></category></entry><entry><title>Fine Tuning Pelican: Copyright and Creative Commons Notice</title><link href="https://jackdewinter.github.io/2019/10/09/fine-tuning-pelican-copyright-and-creative-commons-notice/" rel="alternate"></link><published>2019-10-09T00:00:00-07:00</published><updated>2019-10-09T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-10-09:/2019/10/09/fine-tuning-pelican-copyright-and-creative-commons-notice/</id><summary type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the webpage.&lt;/p&gt;
&lt;p&gt;Unlike my series on &lt;a href="https://jackdewinter.github.io/2019/08/18/static-websites-choosing-a-static-web-site-generator/"&gt;Choosing and Setting Up Pelican&lt;/a&gt;,
these articles are intended to be byte sized, addressing specific fine tunings I made to
my own website. As such, the first article in this series contains a
&lt;a href="https://jackdewinter.github.io/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/#disclaimer"&gt;Disclaimer section&lt;/a&gt; with generic information
for each of the articles in the series.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For anything that you publish, you want to make sure that you clearly state your rights
as the author of the publication.  In addition, if you want people to use that
information in various ways, you want to make sure that you clearly state how they can
use that information for their benefit.  This article outlines the steps needed to ensure
that the website’s copyright and any licensing is prominently displayed.&lt;/p&gt;
&lt;h2 id="clearly-stating-the-copyright-and-licensing"&gt;Clearly Stating The Copyright and Licensing&lt;a class="headerlink" href="#clearly-stating-the-copyright-and-licensing" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For copyright and licensing to be effective, you need it to be clearly stated in a place
that is visible.  One of the reasons I chose the Elegant theme is that it had a solid
place for this at the bottom of the page.&lt;/p&gt;
&lt;p&gt;To add the necessary information for Elegant to display the copyright and licensing,
add the following to the &lt;code&gt;pelicancpnf.py&lt;/code&gt; file, with your own name instead of mine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Legal&lt;/span&gt;
&lt;span class="n"&gt;SITE_LICENSE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;span class="s2"&gt;&amp;amp;copy; Copyright 2019 by Jack De Winter and licensed under a &amp;lt;a rel="license"&lt;/span&gt;
&lt;span class="s2"&gt;  href="http://creativecommons.org/licenses/by/4.0/"&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  &amp;lt;img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by/4.0/80x15.png" /&amp;gt;&lt;/span&gt;
&lt;span class="s2"&gt;  Creative Commons Attribution 4.0 International License&amp;lt;/a&amp;gt;.&lt;/span&gt;
&lt;span class="s2"&gt;"""&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This configuration accomplished three things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clearly states that the copyright for any information presented in the article, except where I denote that I am referencing someone else’s work, is mine.&lt;/li&gt;
&lt;li&gt;Clearly states the license under which any information presented can be used, using both the Creative Commons icon and text.&lt;/li&gt;
&lt;li&gt;Provides a link to the Creative Commons page that clearly states what the licensing agreement is.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="selecting-the-right-licensing"&gt;Selecting the Right Licensing&lt;a class="headerlink" href="#selecting-the-right-licensing" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While there are various licenses out there, the Creative Commons licenses have the right
balance for me between maintaining my ownership of my content and allowing others to use
the information cleanly.  The
&lt;a href="https://creativecommons.org/licenses/"&gt;Creative Commons Licenses Page&lt;/a&gt; gives a good
breakdown of what the particulars of each of their licenses allows and does not allow,
with easy to use pictures to allow for quick dissemination of the information.&lt;/p&gt;
&lt;p&gt;While there are other licenses, such as the
&lt;a href="https://en.wikipedia.org/wiki/MIT_License"&gt;MIT License&lt;/a&gt;, the
&lt;a href="https://en.wikipedia.org/wiki/GNU_General_Public_License"&gt;GNU General License&lt;/a&gt;, and
&lt;a href="https://en.wikipedia.org/wiki/Comparison_of_free_and_open-source_software_licenses"&gt;others&lt;/a&gt;,
for me the Creative Commons licenses are very dry and clean cut on what you can and
cannot do.  As I want people to use the information I am placing on my site, keeping the
license simple and clean is one of my priorities.&lt;/p&gt;
&lt;p&gt;As one of my goals is to help people, educate people, and inspire people, the most
simplistic license that allows people to use the information on the website while
protecting my copyright was the best solution.  Based on those justifications, the CC-BY
license was the right choice for me.  This version allows for the sharing and adapting of
the information on the website as long as any use of the information is given proper
credit, or attribution.  Basically, feel free to use it, but give credit where it is due.&lt;/p&gt;
&lt;h2 id="what-was-accomplished"&gt;What Was Accomplished&lt;a class="headerlink" href="#what-was-accomplished" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this article, I outlined a discussion of why you want to make sure that you have
copyright and licensing information on your website.  I then provided a simple way of
adding the copyright and licensing information to each page of a Pelican website themed
with Elegant.  Finally, I had a quick discussion on what you should think about when
deciding on the licensing on your website, and why I chose the CC-BY license for my
website.&lt;/p&gt;</content><category term="Website"></category><category term="pelican website generator"></category><category term="pelican fine tuning"></category><category term="python"></category><category term="copyright and license"></category></entry><entry><title>Fine Tuning Pelican: Publishing, Drafts, and Document Status Defaults</title><link href="https://jackdewinter.github.io/2019/10/06/fine-tuning-pelican-publishing-drafts-and-document-status-defaults/" rel="alternate"></link><published>2019-10-06T00:00:00-07:00</published><updated>2019-10-06T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-10-06:/2019/10/06/fine-tuning-pelican-publishing-drafts-and-document-status-defaults/</id><summary type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the webpage.&lt;/p&gt;
&lt;p&gt;Unlike my series on &lt;a href="https://jackdewinter.github.io/2019/08/18/static-websites-choosing-a-static-web-site-generator/"&gt;Choosing and Setting Up Pelican&lt;/a&gt;,
these articles are intended to be byte sized, addressing specific fine tunings I made to
my own website. As such, the first article in this series contains a
&lt;a href="https://jackdewinter.github.io/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/#disclaimer"&gt;Disclaimer section&lt;/a&gt; with generic information
for each of the articles in the series.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When creating content for the website, it is often desired to group articles together
that are in various stages of readiness for publication.  Prior to publication, many
content authors want to see how their content will actually look by preparing a draft of
the content that only they can see.   This article discusses settings that address both of
those concerns.&lt;/p&gt;
&lt;h2 id="what-does-the-document-status-do"&gt;What Does the Document Status do?&lt;a class="headerlink" href="#what-does-the-document-status-do" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As part of the standard Pelican feature set, an article or page may have a status of
&lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;draft&lt;/code&gt; or &lt;code&gt;published&lt;/code&gt;.  If the status is &lt;code&gt;hidden&lt;/code&gt;, then it is ignored by
Pelican, and no further action is taken.  If the status is &lt;code&gt;draft&lt;/code&gt;, then it is published
under the &lt;code&gt;drafts&lt;/code&gt; directory and not registered with any of the navigation maps.
Finally, if the status is &lt;code&gt;published&lt;/code&gt;, then it is published using the standard Pelican
article and page mapping, and it is registered with the standard navigation maps.
While there isn’t much information on the &lt;code&gt;status&lt;/code&gt; metadata tag, it is included in the
main pelican documentation on
&lt;a href="https://docs.getpelican.com/en/stable/content.html#file-metadata"&gt;File Metadata&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Without any relevant &lt;code&gt;DEFAULT_METADATA&lt;/code&gt; settings being changed (more on that in a
minute), the default value for &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;published&lt;/code&gt;.  As such, as long as the article
is in the right place to be picked up, it will be published as part of the website. If
a draft version of the article is desired, then the &lt;code&gt;status&lt;/code&gt; metadata must be set to
&lt;code&gt;draft&lt;/code&gt; as shown in this example markdown article:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;---&lt;/span&gt;
&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;Some&lt;/span&gt; &lt;span class="n"&gt;Markdown&lt;/span&gt; &lt;span class="n"&gt;Article&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Quality&lt;/span&gt;
&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;draft&lt;/span&gt;
&lt;span class="c1"&gt;---&lt;/span&gt;

&lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt; &lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unlike the normal publishing process, the rendered version of this file will be placed
in the website’s &lt;code&gt;/drafts&lt;/code&gt; directory, most likely with a name such as
&lt;code&gt;some-markdown-article.html&lt;/code&gt;.  While it is obvious that the page was created by looking
at the output from the publishing of the website, this page will not appear on any
summaries or searches on the website.  This can all be changed by changing the &lt;code&gt;status&lt;/code&gt;
metadata to &lt;code&gt;publish&lt;/code&gt; and re-publishing the website.&lt;/p&gt;
&lt;h2 id="setting-a-document-status-default"&gt;Setting a Document Status Default&lt;a class="headerlink" href="#setting-a-document-status-default" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This information is largely taken from Pelican’s
&lt;a href="https://docs.getpelican.com/en/stable/content.html#publishing-drafts"&gt;Publishing Drafts&lt;/a&gt;
section.  As is mentioned in that section, to change the metadata default for articles
and pages from having a default &lt;code&gt;status&lt;/code&gt; of &lt;code&gt;published&lt;/code&gt; to a default of &lt;code&gt;draft&lt;/code&gt;, the
following text much appear in the &lt;code&gt;pelicanconf.py&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;DEFAULT_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'status'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'draft'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While the Publishing Drafts article does mention that to publish articles and pages, their
metadata must now include a &lt;code&gt;Status: published&lt;/code&gt; metadata line, I feel it does not stress
this enough.  When writing articles from that point forward, it may be easy to remember to
add that metadata tag to each article.  However, to ensure that any previously published
page or article is still published, each previous article and page must be revisited and
that metadata line must be added to those article’s metadata section.&lt;/p&gt;
&lt;h2 id="what-was-accomplished"&gt;What Was Accomplished&lt;a class="headerlink" href="#what-was-accomplished" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When authoring content, it is often desired to group articles in a series together, often
in different states of readiness.  This article started by looking at the document status
and how it works for Pelican, and then moving on to how to set a new default for a
Pelican-based website.  Finally, a note was added to Pelican’s own documentation on
document status to help any readers avoid “losing” any published articles if the default
document status is changed.&lt;/p&gt;</content><category term="Website"></category><category term="pelican website generator"></category><category term="pelican fine tuning"></category><category term="python"></category><category term="pelican document status"></category></entry><entry><title>Fine Tuning Pelican: Article And Page Settings</title><link href="https://jackdewinter.github.io/2019/10/02/fine-tuning-pelican-article-and-page-settings/" rel="alternate"></link><published>2019-10-02T00:00:00-07:00</published><updated>2019-10-02T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-10-02:/2019/10/02/fine-tuning-pelican-article-and-page-settings/</id><summary type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the webpage.&lt;/p&gt;
&lt;p&gt;Unlike my series on &lt;a href="https://jackdewinter.github.io/2019/08/18/static-websites-choosing-a-static-web-site-generator/"&gt;Choosing and Setting Up Pelican&lt;/a&gt;,
these articles are intended to be byte sized, addressing specific fine tunings I made to
my own website. As such, the first article in this series contains a
&lt;a href="https://jackdewinter.github.io/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/#disclaimer"&gt;Disclaimer section&lt;/a&gt; with generic information
for each of the articles in the series.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When creating content for a website, it is important to be able to create the content in
a way that works for you, changing the configuration to suit your needs.  For different
reasons, when you publish that content, control of how that content is displayed is
important to the character of your website.  These settings control these aspects of
the content publishing for the website.  This article goes over some of the more useful
settings for pages and articles and how they affect the website.&lt;/p&gt;
&lt;h2 id="where-is-the-content-located"&gt;Where Is the Content Located?&lt;a class="headerlink" href="#where-is-the-content-located" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I prefer to keep different forms of content in different locations, just to make it
easier to keep where things are in my head.  As such, I have separate content
directories for each type of content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ARTICLE_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'articles'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PAGE_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'pages'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'images'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'theme/images'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'extra/robots.txt'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In my website’s content directory, I have 4 main directories: articles, pages, images,
and extra.  The first two are easy to explain, and I set the Pelican configuration
values  &lt;code&gt;ARTICLE_PATHS&lt;/code&gt; and &lt;code&gt;PAGE_PATHS&lt;/code&gt; to point to those directories.&lt;/p&gt;
&lt;p&gt;The static paths specified by the Pelican configuration values for &lt;code&gt;STATIC_PATHS&lt;/code&gt; are
for folders containing anything that does not need transformation but is part of the
website.  The most important directories
in that category are any images that either I provide or are provided by the theme.  The
&lt;code&gt;robots.txt&lt;/code&gt; file will be covered in a future article, but provides guidance for any
robots that are crawling the website.&lt;/p&gt;
&lt;p&gt;As I intend to keep publishing to this blog for a long time, it was important to me to make
sure that I have an organization that can scale with me.  By keeping each type of content
separate from each other, it allows me to find articles quickly.  I take this a step
further and create a directory for any series that I am writing, keeping both the draft
articles and published articles in that directory.  An advantage of this is it allows me to
ensure a group of articles has a consistent look and feel within that group with little
effort.&lt;/p&gt;
&lt;h2 id="how-is-the-content-published"&gt;How is the Content Published?&lt;a class="headerlink" href="#how-is-the-content-published" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For the publishing of website pages, there are very few options for controlling their
location, as Pelican assumes that the collection of pages is pretty constant, while the
collection of articles will change frequently.&lt;/p&gt;
&lt;p&gt;As such, there are two main configuration values that control where the article is
published.  By default, both of these values are set to the same value &lt;code&gt;{slug}.html&lt;/code&gt;,
publishing all articles in the root output directory.  That didn’t seem right to
me, so I changed these values to the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;}/{slug}/'&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;}/{slug}/index.html'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the article is published, it will be published to a directory mostly dictated by the
publish date of the article, with the article itself written as an &lt;code&gt;index.html&lt;/code&gt; file
within that directory.  For my tastes, this organizes the articles on the website in a
manner in which I can quickly see what I published and when.  The default values for
&lt;code&gt;ARTICLE_URL&lt;/code&gt; and &lt;code&gt;ARTICLE_SAVE_AS&lt;/code&gt; just published everything in the root output directory,
and that just seemed to cluttered for me.&lt;/p&gt;
&lt;h2 id="how-many-articles-to-show-for-lists"&gt;How Many Articles To Show For Lists?&lt;a class="headerlink" href="#how-many-articles-to-show-for-lists" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One of the other Pelican configuration values that I needed to set was the
&lt;code&gt;DEFAULT_PAGINATION&lt;/code&gt; value.  On the main page, where the list of the most recent
articles is displayed, I want to show a decent number of articles, but I don’t want them
to fall off the bottom too much.  As such, I set the following configuration value to
provide a default pagination of 10 items:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I am not sure if this is the right value to start with, but it seems like a decent place to
start.  I expect to make changes to this as I get more feedback from readers, so just
giving it a decent starting value was enough.&lt;/p&gt;
&lt;h2 id="what-was-accomplished"&gt;What Was Accomplished&lt;a class="headerlink" href="#what-was-accomplished" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When writing content for a website, it is important to be able to create the content and
display content in a manner that works for you, the content author.  I described the
settings that I have for my website which control where the content is stored as well as
where the rendered content is published.  In addition, I cover a configuration value that
dictates the default for the maximum number of articles to show in a list.&lt;/p&gt;</content><category term="Website"></category><category term="pelican website generator"></category><category term="pelican fine tuning"></category><category term="python"></category><category term="website landing page"></category><category term="pelican article settings"></category><category term="pelican page settings"></category></entry><entry><title>Fine Tuning Pelican: Setting Up The Landing Page</title><link href="https://jackdewinter.github.io/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/" rel="alternate"></link><published>2019-09-29T00:00:00-07:00</published><updated>2019-09-29T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-09-29:/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/</id><summary type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="preface"&gt;Preface&lt;a class="headerlink" href="#preface" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is one of the articles in a series about how I fine tuned my Pelican+Elegant web
site to make it “more mine”.  For other articles in the series, click on the title of
the article under the heading “Fine Tuning Pelican” on the right side of the webpage.&lt;/p&gt;
&lt;p&gt;Unlike my series on &lt;a href="https://jackdewinter.github.io/2019/08/18/static-websites-choosing-a-static-web-site-generator/"&gt;Choosing and Setting Up Pelican&lt;/a&gt;,
these articles are intended to be byte sized, addressing specific fine tunings I made to
my own website.  As such, the
&lt;a href="https://jackdewinter.github.io/2019/09/29/fine-tuning-pelican-setting-up-the-landing-page/#disclaimer"&gt;Disclaimer section below&lt;/a&gt; is referred to
by link in the other articles in this series instead of replicating it in each article.&lt;/p&gt;
&lt;h2 id="disclaimer"&gt;Disclaimer&lt;a class="headerlink" href="#disclaimer" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I have taken efforts to be clear about whether a given fine tuning was made to the
&lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; configuration or the
&lt;a href="https://elegant.oncrashreboot.com/"&gt;Elegant&lt;/a&gt;
configuration for my website.  Any Pelican configuration that I am
documenting should be broadly applicable to any Pelican based site, and any Elegant
configuration to a Elegant themed site.  If you are using a theme other than Elegant,
please consult the documentation for that theme to determine if that theme supports
something similar.&lt;/p&gt;
&lt;p&gt;In addition, I want to be clear that I am a contributor to the Elegant theme that I use
for my website, helping with the documentation of the theme.  While I decided that it is
the best choice for a theme for my website, I leave it to any reader to make their own
determination as to which theme is best for their own website.  I merely reference
Elegant in these notes on Fine Tuning as part of the configuration that I had to learn
and set up for my own website.  Your mileage may vary.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is important to engage readers of the website and to give them multiple reasons to
come back to the website time and time again.  The creation of a good landing page for
the website is a large part in making that engagement with the readers happen.
This article walks through a number of things that help a landing page increase it’s
engagement with the readers.&lt;/p&gt;
&lt;p&gt;One
of the most important parts of that is to give the website a good name that will stick
in their head and display it prominently on the website.  Following that, a well thought
out introduction to the website will then give the reader a solid idea of what to expect,
allowing them to determine for themselves if it is worth their time and effort to return
to the website.  Finally, adding a list of projects that are related to the website can
be a useful tool in demonstrating to the reader why the website is useful by documenting
how the website and it’s authors benefit other websites and projects.&lt;/p&gt;
&lt;h2 id="giving-the-website-a-good-name"&gt;Giving the Website a good name&lt;a class="headerlink" href="#giving-the-website-a-good-name" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When a reader first comes to the landing page, it is pivotal to have a name for the website
that is front and center on the landing page, easy to identify, and one that will stick
in their mind.  The Elegant theme partially helps with this by putting the site name
at the top left corner of the webpage, with no other text or images right next to it.
This Pelican configuration is set with the following configuration in the website’s
&lt;code&gt;pelicanconf.py&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Jack's Digital Workbench"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While the title placement helps, it is up to the website owners to determine the name to
be used with the website.
I put a lot of thought into the name of my website, as detailed in my article
&lt;a href="https://jackdewinter.github.io/2019/11/15/the-inspiration-for-jacks-digital-workbench/"&gt;The Inspiration For Jack’s Digital Workbench&lt;/a&gt;.
However, prior to me getting the finishing touches on the website for a soft-launch, the
name was &lt;code&gt;Jack's Web Site&lt;/code&gt; for a couple of months.  I wanted to give it a name that
reflected what I wanted to communicate, and I believe that waiting to give it the proper
name allowed me to really figure out the right title, and not just a placeholder title.&lt;/p&gt;
&lt;h2 id="introducing-myself-to-readers"&gt;Introducing myself to Readers&lt;a class="headerlink" href="#introducing-myself-to-readers" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now that the website’s name was configured, it was time to introduce myself to the people
who would hopefully become readers of my blog.  The first part of this was to follow
Elegant’s
&lt;a href="https://elegant.oncrashreboot.com/write-welcome-message"&gt;Home Page - Write Welcome Message&lt;/a&gt;
article and set the title of the landing page to reflect the new name of the site:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;LANDING_PAGE_TITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Welcome to "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;SITENAME&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the title of the introduction taken care of, it was time to further follow Elegant’s
advice, this time from the article titled
&lt;a href="https://elegant.oncrashreboot.com/write-about-me"&gt;Home Page — Write About Me&lt;/a&gt;.
Creating a new document in my content directory called
&lt;code&gt;/pages/landing-page-about-hidden.md&lt;/code&gt;, I copied their sample document and initially
trimmed it down to the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;---&lt;/span&gt;
&lt;span class="nv"&gt;Title&lt;/span&gt;: &lt;span class="nv"&gt;What&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;Jack&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;s Digital Workbench?&lt;/span&gt;
&lt;span class="nv"&gt;slug&lt;/span&gt;: &lt;span class="nv"&gt;landing&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;page&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;about&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;hidden&lt;/span&gt;
&lt;span class="nv"&gt;status&lt;/span&gt;: &lt;span class="nv"&gt;hidden&lt;/span&gt;
&lt;span class="o"&gt;---&lt;/span&gt;

&lt;span class="nv"&gt;This&lt;/span&gt; &lt;span class="nv"&gt;blog&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;place&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;me&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt;...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After building the website and serving it up locally, to make sure that page was being
included properly, I started working on the content.  Due to the importance of this page,
I started working on it in mid-August and didn’t finish it until mid-November.  While
this may seem a bit of a long time and somewhat silly, I wanted to make sure that this
introduction was done right.  In the end, after 5-6 drafts, I made notes on what I liked
and disliked about each draft, then starting from scratch to write the final version in a
couple of hours.&lt;/p&gt;
&lt;p&gt;During all of those drafts, what I was looking for in an introduction was something that
was descriptive, yet not too wordy.  In most of my drafts, I nailed one section, but the
other two failed this test, so the final version took the best parts of a number of the
drafts and wrapped them up as one.  I believe it took a long time because I was trying
to find the right balance for what I wanted to say, without writing what seemed to be
an entire article.  In the end, I ended up taking one of the more verbose sections of
the introduction and made it into
&lt;a href="https://jackdewinter.github.io/2019/11/15/the-inspiration-for-jacks-digital-workbench/"&gt;it’s own article&lt;/a&gt;, replacing it with just
two sentences.  For me, this struck a good balance between communicating what I
wanted in that section and keeping the introduction descriptive, but brief.&lt;/p&gt;
&lt;h2 id="adding-in-related-projects"&gt;Adding in related Projects&lt;a class="headerlink" href="#adding-in-related-projects" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I believe that in any website, it is important to show how that website and it’s authors
contribute or are related to other projects. &lt;/p&gt;
&lt;p&gt;Elegant supports this configuration out of the box with the &lt;code&gt;PROJECTS&lt;/code&gt; configuration
value, documented with the Elegant article on
&lt;a href="https://next.elegant.oncrashreboot.com/projects-list"&gt;Home Page — Projects List&lt;/a&gt;.
For my website, this was set up as the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PROJECTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Creating and Maintaining This Website'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'url'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'https://jackdewinter.github.io/categories#website-ref'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'description'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Notes and articles about the creation and maintenance of this website.'&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Elegant Documentation'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'url'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'https://elegant.oncrashreboot.com/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'description'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Documentation repository for Pelican-Elegant theme.'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From my research on different authors and their blogs, the ones that ended up grabbing
my attention were the ones that not only solved a problem I had, but showed interest in
related projects.  Those related projects didn’t always have to be related to what I was
looking for, but they added “color” to the website.  Without any extra references to other
related websites, I found that I viewed that website as a reference resource rather than
a website that I bookmarked and frequented.&lt;/p&gt;
&lt;p&gt;One thing I thought about for a while was whether or not to include the
&lt;code&gt;Creating and Maintaining This Website&lt;/code&gt; in the projects list.  For the longest time,
I was stuck between calling it a category (it is a distinct group of articles) and
calling it a project (it is stored as one in GitHub).  In the end, the balance I
achieved with this was to create a category for it that appears  after pressing
the &lt;code&gt;Categories&lt;/code&gt; button on the title bar and not mentioning it in my introduction where
I talk about the other categories.  I am not sure if this makes sense to any readers,
but I felt that the equilibrium achieved by those two choices allow it to be a category
but elevate it a bit to something that is a bit bigger than just another category.  As
the website is somewhat fluid, I’ll see how that goes for now, and perhaps change it
later.&lt;/p&gt;
&lt;h2 id="what-was-accomplished"&gt;What Was Accomplished&lt;a class="headerlink" href="#what-was-accomplished" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The landing page of any website is almost certainly the most important page or article on
that entire website.  I documented the process I used to capture a
reader’s attention by selecting a good title for the website, followed by a good
introduction to what the website and it’s authors are about.  As part of this process,
I also talked about how I approached these decisions, and how I figured out that I had
accomplished my goal for both of these items.  Finally, I talked about how I configured
a &lt;code&gt;Projects&lt;/code&gt; section to detail some of the other projects I am working on, and why having
a section like that is important to a website.&lt;/p&gt;
&lt;p&gt;The landing page of any website can capture the attention of a reader or lose that
attention just as easily.  It is important to take your time when developing these parts
of your website to ensure that these pieces of your website are an accurate reflection of
yourself and what you intend to communicate with the website.&lt;/p&gt;</content><category term="Website"></category><category term="pelican website generator"></category><category term="pelican fine tuning"></category><category term="python"></category><category term="website landing page"></category></entry><entry><title>Extended Markdown Examples</title><link href="https://jackdewinter.github.io/2019/06/30/extended-markdown-examples/" rel="alternate"></link><published>2019-06-30T00:00:00-07:00</published><updated>2019-06-30T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-06-30:/2019/06/30/extended-markdown-examples/</id><summary type="html">&lt;p&gt;This is a continuation of the &lt;a href="https://jackdewinter.github.io/2019/06/29/standard-markdown-examples/"&gt;previous cheat sheet&lt;/a&gt; for
my website.  This article specifically addresses any extensions that are not part of the
base Markdown specification.&lt;/p&gt;
&lt;p&gt;Each section here represents an extension that I have enabled on my website.  The formatting
from the previous page is continued, with one …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is a continuation of the &lt;a href="https://jackdewinter.github.io/2019/06/29/standard-markdown-examples/"&gt;previous cheat sheet&lt;/a&gt; for
my website.  This article specifically addresses any extensions that are not part of the
base Markdown specification.&lt;/p&gt;
&lt;p&gt;Each section here represents an extension that I have enabled on my website.  The formatting
from the previous page is continued, with one small exception.  The title of each section
specifies the name of the extension instead of the name of the feature being documented (see
&lt;a href="#admonitions"&gt;Admonitions&lt;/a&gt;).  If an extension contains more than one feature, such as the
Extra extension, the title specifies the name of the extension, a dash, and the name of the
feature (see &lt;a href="#extra-footnotes"&gt;Footnotes&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The authors of the &lt;a href="https://python-markdown.github.io/"&gt;Python Markdown Package&lt;/a&gt;
anticipated the addition of extra features.  To ensure people would have choice, the base
package can be &lt;a href="https://python-markdown.github.io/extensions"&gt;extended using configuration&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Markdown extensions have been activated on my website by inserting the following text into
my peliconconf.py:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;MARKDOWN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'extension_configs'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'markdown.extensions.extra'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
        &lt;span class="s1"&gt;'markdown.extensions.admonition'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
        &lt;span class="s1"&gt;'markdown.extensions.codehilite'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;'css_class'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'highlight'&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s1"&gt;'markdown.extensions.meta'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
        &lt;span class="s1"&gt;'smarty'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;'smart_angled_quotes'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'true'&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s1"&gt;'markdown.extensions.toc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;'permalink'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'true'&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;hr/&gt;
&lt;h2 id="table-of-contents"&gt;Table Of Contents&lt;a class="headerlink" href="#table-of-contents" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[TOC]
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#table-of-contents"&gt;Table Of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#codehilite-code-blocks-with-line-numbers"&gt;CodeHilite - Code Blocks With Line Numbers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extra-footnotes"&gt;Extra - Footnotes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extra-abbreviations"&gt;Extra - Abbreviations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extra-definition-lists"&gt;Extra - Definition Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#smartypants"&gt;Smartypants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#admonitions"&gt;Admonitions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="codehilite-code-blocks-with-line-numbers"&gt;CodeHilite - Code Blocks With Line Numbers&lt;a class="headerlink" href="#codehilite-code-blocks-with-line-numbers" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;```
#!python
    # Code goes here ...
```
&lt;/pre&gt;&lt;/div&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="c1"&gt;# Code goes here ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;hr/&gt;
&lt;h2 id="extra-footnotes"&gt;Extra - Footnotes&lt;a class="headerlink" href="#extra-footnotes" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Here's a simple footnote,[^1] and here's a longer one.[^bignote]

[^1]: This is the first footnote.

[^bignote]: Here's one with multiple paragraphs and code.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here’s a simple footnote,&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; and here’s a longer one.&lt;sup id="fnref:bignote"&gt;&lt;a class="footnote-ref" href="#fn:bignote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="extra-abbreviations"&gt;Extra - Abbreviations&lt;a class="headerlink" href="#extra-abbreviations" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;The HTML specification is maintained by the W3C.

*[HTML]: Hyper Text Markup Language
*[W3C]:  World Wide Web Consortium
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt; specification is maintained by the &lt;abbr title="World Wide Web Consortium"&gt;W3C&lt;/abbr&gt;.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="extra-definition-lists"&gt;Extra - Definition Lists&lt;a class="headerlink" href="#extra-definition-lists" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Apple
:   Pomaceous fruit of plants of the genus Malus in
    the family Rosaceae.

Orange
:   The fruit of an evergreen tree of the genus Citrus.
&lt;/pre&gt;&lt;/div&gt;
&lt;dl&gt;
&lt;dt&gt;Apple&lt;/dt&gt;
&lt;dd&gt;Pomaceous fruit of plants of the genus Malus in
the family Rosaceae.&lt;/dd&gt;
&lt;dt&gt;Orange&lt;/dt&gt;
&lt;dd&gt;The fruit of an evergreen tree of the genus Citrus.&lt;/dd&gt;
&lt;/dl&gt;
&lt;hr/&gt;
&lt;h2 id="smartypants"&gt;Smartypants&lt;a class="headerlink" href="#smartypants" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;advantage is that code blocks are unaffected&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;- apostrophe ' by itself
- apostrophe as in 'quote me'
- quotations mark " by itself
- quotations mark as in "quote me"
- replacement of multi-character sequences with Unicode: &amp;lt;&amp;lt; ... -- &amp;gt;&amp;gt; ---
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;apostrophe ‘ by itself&lt;/li&gt;
&lt;li&gt;apostrophe as in ‘quote me’&lt;/li&gt;
&lt;li&gt;quotations mark ” by itself&lt;/li&gt;
&lt;li&gt;quotations mark as in “quote me”&lt;/li&gt;
&lt;li&gt;replacement of multi-character sequences with Unicode: « … – » —&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="admonitions"&gt;Admonitions&lt;a class="headerlink" href="#admonitions" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;broken down into section by the way that the Elegant theme colors the admonitions&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;!!! note
    You should note that the title will be automatically capitalized.
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;You should note that the title will be automatically capitalized.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;!!! important "Replacement Title"
    You should note that the default title will be replaced.
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition important"&gt;
&lt;p class="admonition-title"&gt;Replacement Title&lt;/p&gt;
&lt;p&gt;You should note that the default title will be replaced.&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;!!! hint
    You should note that the title will be automatically capitalized.
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt;Hint&lt;/p&gt;
&lt;p&gt;You should note that the title will be automatically capitalized.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;!!! tip "Replacement Title"
    You should note that the default title will be replaced.
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition tip"&gt;
&lt;p class="admonition-title"&gt;Replacement Title&lt;/p&gt;
&lt;p&gt;You should note that the default title will be replaced.&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;!!! warning
    You should note that the title will be automatically capitalized.
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt;Warning&lt;/p&gt;
&lt;p&gt;You should note that the title will be automatically capitalized.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;!!! caution "Replacement Title"
    You should note that the default title will be replaced.
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition caution"&gt;
&lt;p class="admonition-title"&gt;Replacement Title&lt;/p&gt;
&lt;p&gt;You should note that the default title will be replaced.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;!!! attention ""
    You should note that this will have no title due to the empty title.
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition attention"&gt;
&lt;p&gt;You should note that this will have no title due to the empty title.&lt;/p&gt;
&lt;/div&gt;
&lt;hr/&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;!!! danger
    You should note that the title will be automatically capitalized.
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition danger"&gt;
&lt;p class="admonition-title"&gt;Danger&lt;/p&gt;
&lt;p&gt;You should note that the title will be automatically capitalized.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;!!! error "Replacement Title"
    You should note that the default title will be replaced.
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition error"&gt;
&lt;p class="admonition-title"&gt;Replacement Title&lt;/p&gt;
&lt;p&gt;You should note that the default title will be replaced.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="footnote"&gt;
&lt;hr/&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;This is the first footnote. &lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:bignote"&gt;
&lt;p&gt;Here’s one with multiple paragraphs and code. &lt;a class="footnote-backref" href="#fnref:bignote" title="Jump back to footnote 2 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Website"></category><category term="markdown"></category><category term="sample article"></category></entry><entry><title>Standard Markdown Examples</title><link href="https://jackdewinter.github.io/2019/06/29/standard-markdown-examples/" rel="alternate"></link><published>2019-06-29T00:00:00-07:00</published><updated>2019-06-29T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-06-29:/2019/06/29/standard-markdown-examples/</id><summary type="html">&lt;p&gt;As I started writing my articles for my blog, I realized I needed something.  To help me
write articles using this flavor of Markdown&lt;sup id="fnref:Markdown"&gt;&lt;a class="footnote-ref" href="#fn:Markdown"&gt;1&lt;/a&gt;&lt;/sup&gt;, I needed my own cheat sheet.  My
hope is that it provides clear guidance on which aspects of the various forms of Markdown
worked for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As I started writing my articles for my blog, I realized I needed something.  To help me
write articles using this flavor of Markdown&lt;sup id="fnref:Markdown"&gt;&lt;a class="footnote-ref" href="#fn:Markdown"&gt;1&lt;/a&gt;&lt;/sup&gt;, I needed my own cheat sheet.  My
hope is that it provides clear guidance on which aspects of the various forms of Markdown
worked for me, and which didn’t.&lt;/p&gt;
&lt;hr/&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#horizontal-break"&gt;Horizontal Break&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#headings"&gt;Headings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#text-emphasis"&gt;Text Emphasis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#numbered-lists"&gt;Numbered lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bulleted-list"&gt;Bulleted List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#block-quote"&gt;Block quote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-block"&gt;Code Block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tables"&gt;Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#links"&gt;Links&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#local-links"&gt;Local Links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#remote-links"&gt;Remote Links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#download-links"&gt;Download Links&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#images"&gt;Images&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;

&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I am writing articles and pages on Pelican 4.0.1&lt;sup id="fnref:Pelican"&gt;&lt;a class="footnote-ref" href="#fn:Pelican"&gt;2&lt;/a&gt;&lt;/sup&gt; using the Elegant&lt;sup id="fnref:Elegant"&gt;&lt;a class="footnote-ref" href="#fn:Elegant"&gt;3&lt;/a&gt;&lt;/sup&gt; theme, therefore
I want to
make sure I have a cheat sheet that is specific to this dialect of Markdown. The base Markdown
used for Pelican uses the &lt;a href="https://python-markdown.github.io/"&gt;Python Markdown Package&lt;/a&gt; which
(with 3 exceptions) follows
&lt;a href="https://daringfireball.net/projects/markdown/syntax"&gt;John Gruber’s Markdown definition&lt;/a&gt;
very literally.  Pelican configuration also supports providing Markdown with additional
configuration that enables other features.  Those features are documented separately in
&lt;a href="https://jackdewinter.github.io/2019/06/30/extended-markdown-examples/"&gt;the next page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The format of this cheat sheet is simple.  Each section is separated from the next with a
horizontal break and the name of the section.  Any notes regarding that section are placed
at the top of the section in point form, to ensure they are brief.  Then a
&lt;a href="#code-block"&gt;Code Block&lt;/a&gt; section is used to show the literal code used to produce the effects
that are presented right after the code block.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="horizontal-break"&gt;Horizontal Break&lt;a class="headerlink" href="#horizontal-break" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;A horizontal break occurs after 3 or more hyphens.

---
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A horizontal break occurs after 3 or more hyphens.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="headings"&gt;Headings&lt;a class="headerlink" href="#headings" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Heading Level 1

## Heading Level 2

### Heading Level 3
&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="heading-level-1"&gt;Heading Level 1&lt;a class="headerlink" href="#heading-level-1" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="heading-level-2"&gt;Heading Level 2&lt;a class="headerlink" href="#heading-level-2" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="heading-level-3"&gt;Heading Level 3&lt;a class="headerlink" href="#heading-level-3" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;hr/&gt;
&lt;h2 id="text-emphasis"&gt;Text Emphasis&lt;a class="headerlink" href="#text-emphasis" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;two spaces at the end of a line will be equivalent to &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;This text is **bold** and this text is also __bold__.  
This text is *italic* and this text is also _italic_.  
This text is **_italic and bold_**, but no two spaces at end.
Single ```line``` block.  
Inline `code` has ```back-ticks like this ` around``` it.  
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This text is &lt;strong&gt;bold&lt;/strong&gt; and this text is also &lt;strong&gt;bold&lt;/strong&gt;.&lt;br/&gt;
This text is &lt;em&gt;italic&lt;/em&gt; and this text is also &lt;em&gt;italic&lt;/em&gt;.&lt;br/&gt;
This text is &lt;strong&gt;&lt;em&gt;italic and bold&lt;/em&gt;&lt;/strong&gt;, but no two spaces at end.
Single &lt;code&gt;line&lt;/code&gt; block.&lt;br/&gt;
Inline &lt;code&gt;code&lt;/code&gt; has &lt;code&gt;back-ticks like this ` around&lt;/code&gt; it.  &lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="numbered-lists"&gt;Numbered lists&lt;a class="headerlink" href="#numbered-lists" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;to maintain the indentation, place 4 spaces at the start of the line&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;1. One  

    New para.  

    Blah

2. Two
    - unordered
    - list
3. Three
    1. ordered
    2. list
        - unordered
        - list
    3. items
&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;One  &lt;/p&gt;
&lt;p&gt;New para.  &lt;/p&gt;
&lt;p&gt;Blah&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Two&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;unordered&lt;/li&gt;
&lt;li&gt;list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Three&lt;ol&gt;
&lt;li&gt;ordered&lt;/li&gt;
&lt;li&gt;list&lt;ul&gt;
&lt;li&gt;unordered&lt;/li&gt;
&lt;li&gt;list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;items&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h2 id="bulleted-list"&gt;Bulleted List&lt;a class="headerlink" href="#bulleted-list" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;to maintain the indentation, place 4 spaces at the start of the line&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;- This is a list item with two paragraphs.

    This is the second paragraph in the list item. You're
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.

- Another item in the same list.
    - Bulleted item
    - Bulleted item
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This is a list item with two paragraphs.&lt;/p&gt;
&lt;p&gt;This is the second paragraph in the list item. You’re
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another item in the same list.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bulleted item&lt;/li&gt;
&lt;li&gt;Bulleted item&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="block-quote"&gt;Block quote&lt;a class="headerlink" href="#block-quote" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; This is the first paragraph of a blockquote with two paragraphs.
&amp;gt; Lorem ipsum dolor sit amet,
&amp;gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&amp;gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&amp;gt;
&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&amp;gt;
&amp;gt; This is the first level of quoting.
&amp;gt;
&amp;gt; &amp;gt; This is nested blockquote.
&amp;gt;
&amp;gt; Back to the first level.
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the first paragraph of a blockquote with two paragraphs.
Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&lt;/p&gt;
&lt;p&gt;This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&lt;/p&gt;
&lt;p&gt;This is the first level of quoting.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is nested blockquote.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Back to the first level.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr/&gt;
&lt;h2 id="code-block"&gt;Code Block&lt;a class="headerlink" href="#code-block" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;line numbers can be added
&lt;a href="https://jackdewinter.github.io/2019/06/30/extended-markdown-examples/#codehilite-code-blocks-with-line-numbers"&gt;via extensions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;```text
Make things only as complex as they need to be.
```

```Python
# Blogroll
LINKS = (
            ('Pelican', 'Pelican', 'http://getpelican.com/'),
         )
```
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Make things only as complex as they need to be.
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Pelican'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Pelican'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'http://getpelican.com/'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="tables"&gt;Tables&lt;a class="headerlink" href="#tables" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;colons can be used to align columns.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;| Column1 | Column 2 | Column 3
|---|---|---|
| Value 1 | Value 2 | Value 3 |
| Value 4 | Value 5 | Value 6 |
| Value 7 | Value 8 | Value 9 |

| Tables        | Are           | Cool  |
| ------------- |:-------------:| -----:|
| col 3 is      | right-aligned | $1600 |
| col 2 is      | centered      |   $12 |
| zebra stripes | are neat      |    $1 |
&lt;/pre&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Column1&lt;/th&gt;
&lt;th&gt;Column 2&lt;/th&gt;
&lt;th&gt;Column 3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Value 1&lt;/td&gt;
&lt;td&gt;Value 2&lt;/td&gt;
&lt;td&gt;Value 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Value 4&lt;/td&gt;
&lt;td&gt;Value 5&lt;/td&gt;
&lt;td&gt;Value 6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Value 7&lt;/td&gt;
&lt;td&gt;Value 8&lt;/td&gt;
&lt;td&gt;Value 9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th align="center"&gt;Are&lt;/th&gt;
&lt;th align="right"&gt;Cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td align="center"&gt;right-aligned&lt;/td&gt;
&lt;td align="right"&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td align="center"&gt;centered&lt;/td&gt;
&lt;td align="right"&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zebra stripes&lt;/td&gt;
&lt;td align="center"&gt;are neat&lt;/td&gt;
&lt;td align="right"&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr/&gt;
&lt;h2 id="links"&gt;Links&lt;a class="headerlink" href="#links" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="local-links"&gt;Local Links&lt;a class="headerlink" href="#local-links" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{filename}&lt;/code&gt; tag indicates location in the content folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[About Page]({filename}/pages/landing-page-about-hidden.md)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://jackdewinter.github.io/pages/landing-page-about-hidden.html"&gt;About Page&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="remote-links"&gt;Remote Links&lt;a class="headerlink" href="#remote-links" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;proper URL indicates a remote website&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Python Package Index](https://pypi.org)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://pypi.org"&gt;Python Package Index&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="download-links"&gt;Download Links&lt;a class="headerlink" href="#download-links" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;download links are not natively supported in Markdown&lt;/li&gt;
&lt;li&gt;must explicitly create HTML text inline to achieve that
Creating a link to a file to download, not display, is not natively supported in markdown.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Pelican Brag Document (display)]({static}/images/markdown-1/pelican.txt)  
&amp;lt;a href="{static}/images/pelican.txt" download&amp;gt;Pelican Brag Document (download)&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://jackdewinter.github.io/images/markdown-1/pelican.txt"&gt;Pelican Brag Document (display)&lt;/a&gt;&lt;br/&gt;
&lt;a download="" href="https://jackdewinter.github.io/images/markdown-1/pelican.txt"&gt;Pelican Brag Document (download)&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="images"&gt;Images&lt;a class="headerlink" href="#images" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{filename}&lt;/code&gt; tag indicates location in the content folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;![python logo]({static}/images/markdown-1/python_icon.png)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="python logo" src="https://jackdewinter.github.io/images/markdown-1/python_icon.png"/&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr/&gt;
&lt;ol&gt;
&lt;li id="fn:Markdown"&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; allows for HTML pages to be written using a simple text editor with no knowledge of HTML. &lt;a class="footnote-backref" href="#fnref:Markdown" title="Jump back to footnote 1 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:Pelican"&gt;
&lt;p&gt;&lt;a href="http://docs.getpelican.com/en/stable/"&gt;Pelican&lt;/a&gt; is a Static Site Generator written in Python. &lt;a class="footnote-backref" href="#fnref:Pelican" title="Jump back to footnote 2 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:Elegant"&gt;
&lt;p&gt;The Elegant theme’s repository &lt;a href="https://github.com/Pelican-Elegant/elegant"&gt;is here&lt;/a&gt;. &lt;a class="footnote-backref" href="#fnref:Elegant" title="Jump back to footnote 3 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Website"></category><category term="markdown"></category><category term="sample article"></category></entry><entry><title>My Gallery Article</title><link href="https://jackdewinter.github.io/2010/12/06/my-gallery-test/" rel="alternate"></link><published>2010-12-06T10:20:00-08:00</published><updated>2010-12-06T19:30:00-08:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2010-12-06:/2010/12/06/my-gallery-test/</id><summary type="html">&lt;p&gt;Short version of short for index and feeds&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="python logo" src="https://jackdewinter.github.io\photos\dragondance/photo-1556592538-e29ac3307863a.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jackdewinter.github.io\photos\dragondance/photo-1557162472-6b5c6729b7e6.jpg" data-lightbox="dragondance"&gt;&lt;img alt="python logo" src="https://jackdewinter.github.io\photos\dragondance/photo-1557162472-6b5c6729b7e6t.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer malesuada sed tortor et pulvinar. Donec a vehicula ligula. Quisque porta erat vitae lectus lacinia varius. Integer sed lacus in libero volutpat lobortis ac vitae velit. Praesent rutrum turpis sem, id mattis sem pulvinar id. Morbi leo felis, facilisis in ex a, viverra placerat justo. Donec ac risus non sapien feugiat malesuada.&lt;/p&gt;</content><category term="Website"></category><category term="sample article"></category></entry><entry><title>My Long Article</title><link href="https://jackdewinter.github.io/2010/12/03/my-super-long-post/" rel="alternate"></link><published>2010-12-03T10:20:00-08:00</published><updated>2010-12-05T19:30:00-08:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2010-12-03:/2010/12/03/my-super-long-post/</id><summary type="html">&lt;p&gt;Short version of long for index and feeds&lt;/p&gt;</summary><content type="html">&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer malesuada sed tortor et pulvinar. Donec a vehicula ligula. Quisque porta erat vitae lectus lacinia varius. Integer sed lacus in libero volutpat lobortis ac vitae velit. Praesent rutrum turpis sem, id mattis sem pulvinar id. Morbi leo felis, facilisis in ex a, viverra placerat justo. Donec ac risus non sapien feugiat malesuada.&lt;/p&gt;
&lt;h2 id="para-1"&gt;Para 1&lt;a class="headerlink" href="#para-1" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Donec quam neque, vulputate quis purus at, tempus tincidunt neque. Sed posuere eros eu massa lobortis varius. Ut condimentum elit eros. Sed vel nunc vitae nibh aliquet vestibulum vitae quis justo. Sed vel ligula turpis. Aliquam et mi mollis, suscipit sapien vel, molestie enim. Morbi sodales, dui nec congue tristique, risus mi luctus nulla, vel egestas sem nulla quis augue. Nulla vitae efficitur odio, quis egestas ex. Pellentesque a est viverra, fringilla dui ac, laoreet purus. Suspendisse porta aliquet nunc et pulvinar. Integer ante felis, tincidunt eu ipsum a, imperdiet convallis augue. Cras vulputate sapien sit amet metus placerat, sed congue turpis tempus. Nunc pretium ac dolor eget tincidunt.&lt;/p&gt;
&lt;h2 id="para-2"&gt;Para 2&lt;a class="headerlink" href="#para-2" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Nunc id tortor lectus. Quisque fermentum sem ut elit ultricies sollicitudin. Curabitur blandit, elit at suscipit mattis, purus lectus eleifend felis, id rutrum neque sapien vitae arcu. Aenean elementum lacus tristique purus facilisis placerat. Nunc pharetra lorem ut finibus blandit. Aenean scelerisque elit nec malesuada accumsan. Proin eu orci eget odio scelerisque viverra a ac nulla. Vestibulum elementum lobortis quam. Morbi porta rutrum mi, quis laoreet nunc dictum at. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Ut in lobortis massa.&lt;/p&gt;
&lt;h3 id="para-2a"&gt;Para 2a&lt;a class="headerlink" href="#para-2a" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Phasellus et leo in nunc fermentum vulputate. Nullam sed interdum augue. Duis eu dignissim eros. Mauris pretium turpis non purus porta, non consequat enim rutrum. Fusce dui odio, consequat in rhoncus sed, interdum vulputate quam. Nullam nec dolor ex. Curabitur dapibus vestibulum odio at sodales.&lt;/p&gt;
&lt;h3 id="para-2b"&gt;Para 2b&lt;a class="headerlink" href="#para-2b" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Etiam dignissim lorem at turpis suscipit pharetra. Ut velit velit, pellentesque sit amet ex sed, efficitur laoreet enim. Etiam pharetra neque quam, in elementum massa molestie vel. Duis nec venenatis nisi. Etiam condimentum, leo vel ultrices placerat, dolor nibh pretium tortor, vel egestas odio nulla ut lectus. Etiam ultrices nulla quis felis tincidunt, quis sollicitudin elit lacinia. Suspendisse porttitor nulla rhoncus est blandit, eu faucibus lacus vestibulum.&lt;/p&gt;
&lt;p&gt;Etiam dignissim lorem at turpis suscipit pharetra. Ut velit velit, pellentesque sit amet ex sed, efficitur laoreet enim. Etiam pharetra neque quam, in elementum massa molestie vel. Duis nec venenatis nisi. Etiam condimentum, leo vel ultrices placerat, dolor nibh pretium tortor, vel egestas odio nulla ut lectus. Etiam ultrices nulla quis felis tincidunt, quis sollicitudin elit lacinia. Suspendisse porttitor nulla rhoncus est blandit, eu faucibus lacus vestibulum.&lt;/p&gt;
&lt;p&gt;Etiam dignissim lorem at turpis suscipit pharetra. Ut velit velit, pellentesque sit amet ex sed, efficitur laoreet enim. Etiam pharetra neque quam, in elementum massa molestie vel. Duis nec venenatis nisi. Etiam condimentum, leo vel ultrices placerat, dolor nibh pretium tortor, vel egestas odio nulla ut lectus. Etiam ultrices nulla quis felis tincidunt, quis sollicitudin elit lacinia. Suspendisse porttitor nulla rhoncus est blandit, eu faucibus lacus vestibulum.&lt;/p&gt;
&lt;p&gt;Etiam dignissim lorem at turpis suscipit pharetra. Ut velit velit, pellentesque sit amet ex sed, efficitur laoreet enim. Etiam pharetra neque quam, in elementum massa molestie vel. Duis nec venenatis nisi. Etiam condimentum, leo vel ultrices placerat, dolor nibh pretium tortor, vel egestas odio nulla ut lectus. Etiam ultrices nulla quis felis tincidunt, quis sollicitudin elit lacinia. Suspendisse porttitor nulla rhoncus est blandit, eu faucibus lacus vestibulum.&lt;/p&gt;
&lt;p&gt;Etiam dignissim lorem at turpis suscipit pharetra. Ut velit velit, pellentesque sit amet ex sed, efficitur laoreet enim. Etiam pharetra neque quam, in elementum massa molestie vel. Duis nec venenatis nisi. Etiam condimentum, leo vel ultrices placerat, dolor nibh pretium tortor, vel egestas odio nulla ut lectus. Etiam ultrices nulla quis felis tincidunt, quis sollicitudin elit lacinia. Suspendisse porttitor nulla rhoncus est blandit, eu faucibus lacus vestibulum.&lt;/p&gt;
&lt;p&gt;Etiam dignissim lorem at turpis suscipit pharetra. Ut velit velit, pellentesque sit amet ex sed, efficitur laoreet enim. Etiam pharetra neque quam, in elementum massa molestie vel. Duis nec venenatis nisi. Etiam condimentum, leo vel ultrices placerat, dolor nibh pretium tortor, vel egestas odio nulla ut lectus. Etiam ultrices nulla quis felis tincidunt, quis sollicitudin elit lacinia. Suspendisse porttitor nulla rhoncus est blandit, eu faucibus lacus vestibulum.&lt;/p&gt;
&lt;p&gt;Etiam dignissim lorem at turpis suscipit pharetra. Ut velit velit, pellentesque sit amet ex sed, efficitur laoreet enim. Etiam pharetra neque quam, in elementum massa molestie vel. Duis nec venenatis nisi. Etiam condimentum, leo vel ultrices placerat, dolor nibh pretium tortor, vel egestas odio nulla ut lectus. Etiam ultrices nulla quis felis tincidunt, quis sollicitudin elit lacinia. Suspendisse porttitor nulla rhoncus est blandit, eu faucibus lacus vestibulum.&lt;/p&gt;</content><category term="Website"></category><category term="sample article"></category></entry><entry><title>My Short Article</title><link href="https://jackdewinter.github.io/2010/12/03/my-super-short-post/" rel="alternate"></link><published>2010-12-03T10:20:00-08:00</published><updated>2010-12-05T19:30:00-08:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2010-12-03:/2010/12/03/my-super-short-post/</id><summary type="html">&lt;p&gt;Short version of short for index and feeds&lt;/p&gt;</summary><content type="html">&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer malesuada sed tortor et pulvinar. Donec a vehicula ligula. Quisque porta erat vitae lectus lacinia varius. Integer sed lacus in libero volutpat lobortis ac vitae velit. Praesent rutrum turpis sem, id mattis sem pulvinar id. Morbi leo felis, facilisis in ex a, viverra placerat justo. Donec ac risus non sapien feugiat malesuada.&lt;/p&gt;</content><category term="Website"></category><category term="sample article"></category></entry></feed>