<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jack's Digital Workbench - Personal</title><link href="https://jackdewinter.github.io/" rel="alternate"></link><link href="https://jackdewinter.github.io/feeds/personal.atom.xml" rel="self"></link><id>https://jackdewinter.github.io/</id><updated>2022-05-30T00:00:00-07:00</updated><entry><title>Crashing On A Side Project</title><link href="https://jackdewinter.github.io/2022/05/30/crashing-on-a-side-project/" rel="alternate"></link><published>2022-05-30T00:00:00-07:00</published><updated>2022-05-30T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2022-05-30:/2022/05/30/crashing-on-a-side-project/</id><summary type="html">
&lt;h2 id="summary"&gt;Summary&lt;a class="headerlink" href="#summary" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In my
&lt;a href="https://jackdewinter.github.io/2022/05/17/markdown-linter-shifting-left/"&gt;last article&lt;/a&gt;, I
talked about the work I have been doing in the background on the
&lt;a href="https://github.com/jackdewinter/pymarkdown"&gt;PyMarkdown&lt;/a&gt; project. In this
article, I talk about the effect that work had on me personally.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Yes, this is a personal article. In addition, any longtime readers may notice that …&lt;/p&gt;</summary><content type="html">
&lt;h2 id="summary"&gt;Summary&lt;a class="headerlink" href="#summary" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In my
&lt;a href="https://jackdewinter.github.io/2022/05/17/markdown-linter-shifting-left/"&gt;last article&lt;/a&gt;, I
talked about the work I have been doing in the background on the
&lt;a href="https://github.com/jackdewinter/pymarkdown"&gt;PyMarkdown&lt;/a&gt; project. In this
article, I talk about the effect that work had on me personally.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Yes, this is a personal article. In addition, any longtime readers may notice that
this article was posted a week later than I usually post.  Basically, what happened
is that while working on my side projects last weekend, I crashed and crashed hard.&lt;/p&gt;
&lt;p&gt;Being my usual self, I thought it would be cool to try and help others avoid the
negativity of crashing and to help show the positives of taking care of one’s self
after such a crash.  Basically, how to avoid the pitfalls and help get on your
feet faster afterwards.&lt;/p&gt;
&lt;h2 id="the-crash-itself"&gt;The Crash Itself&lt;a class="headerlink" href="#the-crash-itself" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;That weekend started like many other weekends I have spent working on my open
source projects.  I talked with my spouse and made sure that I had a clear idea of
what our schedule was like for the weekend, planning my project work around those
scheduled items.  Experience has taught me to include buffer time and extra “spouse”
time, so added that as well.  After that was all taken care of, I had a good idea
of the time I could spend on the
&lt;a href="https://github.com/jackdewinter/pymarkdown"&gt;PyMarkdown&lt;/a&gt;
project and looked forward to clearing up some of the remaining issues.&lt;/p&gt;
&lt;p&gt;To be honest, there are not that many issues left that I consider blocking issues,
but there are at least three issues that I believe meet that criteria.  Those issues
are all issues that were recorded during the addition of my latest round of container
combinations.  And as I am being honest, I will say this very bluntly: I was upset
with myself that I still had three issues left.&lt;/p&gt;
&lt;p&gt;I was not upset with myself for finding those issues.  Those issues were all good
finds due to the combinations.  What I was upset with is that it had been a good
couple of months since I found them, and they were still on the active issues list.
I temporarily forgot that I had a series of interview loops followed by on-boarding
at my new job.  And as I started locating those issues and dealing
with them, I slowly turned that weekend from a fun weekend improving the quality
of the project into a compulsive need to get those issues dealt with.&lt;/p&gt;
&lt;h3 id="how-did-it-happen"&gt;How Did It Happen?&lt;a class="headerlink" href="#how-did-it-happen" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Even after a good eight days since it happened, most of what happened
that weekend is still clouded in my mind.  I know that initially I wanted to get
those issues dealt with, but I was forgiving with myself because of what had been
going on in my life.  But I also know that I had been trying to make headway
with those issues during the week, and I had not made any progress on any of those
three issues.&lt;/p&gt;
&lt;p&gt;And that is where I think I started to descend into madness, so to speak.  While
I am usually forgiving with myself for life’s circumstances, I can be equally
unforgiving when I do not feel that I am making reasonable progress.  Put another
way, I wonder if I thought that I should have made more progress on those three
issues.  If so, then my lack of progress might have kicked off my anxiety and
then everything would have snowballed.&lt;/p&gt;
&lt;h3 id="what-did-it-feel-like"&gt;What Did It Feel Like?&lt;a class="headerlink" href="#what-did-it-feel-like" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The honest answer to the earlier question is: I can only guess.  I am not trying
to hide the truth, I honestly do not remember much of my work on that weekend.
I remember some stuff from Friday when I started working on debugging.  Project-wise,
I do not remember much until around 6PM on Sunday when I locked my computer and
buried my head
in my hands.  The little bits that I do remember between those two points are
filled with anger and frustration, and me trying to push past those to try and
get something done… and failing.  Not good memories.&lt;/p&gt;
&lt;p&gt;I remember stopping at 6PM on Sunday with the intense feeling that I had pushed
myself too far.  The thought of unlocking my computer to start writing my weekly
article caused me to be nauseous. The thought of double checking my research from
the past two days to see if I missed something made me sick to my stomach.  I left
my computer locked, exited my office, and closed the door.  If the door had a
lock on it, I would have locked it as well. I was done.&lt;/p&gt;
&lt;p&gt;I just vegged out for the rest of the night, hoping to get a few of my brain cells back.
As long as I did not think about my project, I was fine.  I had some conversations
with my spouse, watched a couple of recorded Champion’s League matches, and
did work on one of my LEGO models.  My brain cells were all working in those areas.
As long as I mentally stayed away from the project, I was fine.&lt;/p&gt;
&lt;p&gt;When I went to work the next day, everything was fine there too. It was a good Monday
workwise, and I got a healthy amount of stuff done.  But the second I stopped
working and I went to my home computer, that sense of dread came back.  Reading
e-mail was fine, but anything more than that and that intense negative feeling just
crept back into my head.  I took until Wednesday before I was able to logon to that
computer to do something other than read e-mail.&lt;/p&gt;
&lt;h2 id="responding-to-my-crash-with-honesty"&gt;Responding To My Crash With Honesty&lt;a class="headerlink" href="#responding-to-my-crash-with-honesty" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I wish I could say that I was smart enough to avoid the crash in the first place, but
obviously I was not.  Because of the cloud around that entire weekend, I cannot
even take an honest look back at that time and figure out how to approach that
work differently.  I can guess, but that is all that it is, a guess.&lt;/p&gt;
&lt;p&gt;Having been through situations like this over the years, the important part for
me was understanding that I had crashed and being honest with myself that I had
crashed.  This was not just a bad day or something that I would just “get over”,
it was a crash.  This was a negative situation that I knew I had to manage properly
if I wanted to recover quickly and with as few remnants hanging around as possible.
In lay terms, if I did not take care of myself properly, one or more of the
bad parts of this situation could say around.&lt;/p&gt;
&lt;p&gt;Being honest with the little bit that I could remember, I was pretty sure that I
had pushed myself too far, too many times over that weekend.  Based on how I was
feeling on Sunday night, which was my best guess.
As such, I knew that I needed to avoid pushing myself for at least a week or so
until I started feeling better.  For me, that is a hard thing to do.  The only
thing driving my open source projects forward is me making the time and effort to
work on them.  As such, taking a break from any work like that is like nails on a
chalkboard for me.&lt;/p&gt;
&lt;p&gt;The thing that stopped me from doing that was my honesty with myself and my experience
with crashes in the past.  Based on that experience, even if I wanted to rush forward
to work on the projects, I knew that it was the wrong
thing to do in this case.  Forget about a little voice telling myself that it
was the wrong thing, it was a huge, booming, echoing voice.  That voice was telling
me that it was okay to evaluate myself for five or less minutes a day to see how I was
doing, but any more effort was going to be hurtful.&lt;/p&gt;
&lt;p&gt;So, I waited.  I tried each day to see how I was doing, but I waited.&lt;/p&gt;
&lt;h2 id="and-then-the-recovery"&gt;And Then, The Recovery&lt;a class="headerlink" href="#and-then-the-recovery" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;And it was the following Saturday morning before I evaluated myself for five minutes
without feeling decreased negative pressure. Assuming that I am usually able to
exert 100% effort, if I had to gauge where my energy or effort was at, then this
effort felt like it was in the 20-30% range.  It was not much, but it was a good start.&lt;/p&gt;
&lt;p&gt;Using that level of effort, I started to work, taking decent breaks through
the rest of the day.  At any point, if I felt any pushback from myself, I simply
said “that is enough”, and walked away from the computer for at least an hour.
And through the course of the day, I must have done that around six times.
From a pure time point of view, it was not a good day for me working on the
PyMarkdown project.&lt;/p&gt;
&lt;p&gt;But from an effort point of view, it was encouraging.  By the end of that
Saturday, I would have to guess that I was more in the 45-55% range as far as
my effort was concerned.  More importantly, I had solved one of the issues that
had caused me to get into the negative situation in the first place.  It was
humbling.  What I had tried to do with each of the three remaining issues over
that nasty weekend, I had accomplished with less than half my usual effort while
I was recovering.&lt;/p&gt;
&lt;p&gt;The news gets better.  Doing some more work yesterday, I was able to raise
my effort level to around 60-70%.  And while I did not solve either one of the
two remaining issues, I have been able to make substantial progress to get one
of them solved.  While I do not want to jinx anything, I am confident that with
more of the save level of work, I should be able to get that issue resolved
by the end of the week.  And if I do not get it done, I know I have to be easy
on myself.&lt;/p&gt;
&lt;h2 id="issues-for-thought"&gt;Issues For Thought&lt;a class="headerlink" href="#issues-for-thought" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As a father and friend, I have tried to impart many small pieces of wisdom that
I have gained only though a lot of sacrifice. One of those bits of wisdom is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It does not matter how many times you get knocked down to your knees.  What matters
is how many times you decide to get up, dust yourself off, and try not to get
knocked down again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We are all human beings, each of us in our own way.  And one of the unenviable
truths of being human is that we learn best from failure instead of success.  My
big failure was in not recognizing that I was in some form of a downward spiral
until I hit the bottom of that spiral.  But my success was in being truthful with
myself and acknowledging that I was at the bottom.  That success continued when I
concluded that I needed to take care of myself to get out of there.
It needed to be my choice to dust myself off after getting knocked down, and no
one else’s. And while it was not any easy choice, I believe it was the right choice
to make.&lt;/p&gt;
&lt;p&gt;In summary, in a typical “me” move, instead of focusing on the fact that I crashed,
I decided to share my experience and try and to figure out how to grow from it.
It took me over twenty years to learn this particular pattern… I hope I can
help shortcut some of that time for others.&lt;/p&gt;</content><category term="Personal"></category><category term="crashing"></category></entry><entry><title>The Inspiration For Jack's Digital Workbench</title><link href="https://jackdewinter.github.io/2019/11/15/the-inspiration-for-jacks-digital-workbench/" rel="alternate"></link><published>2019-11-15T00:00:00-08:00</published><updated>2019-11-15T00:00:00-08:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-11-15:/2019/11/15/the-inspiration-for-jacks-digital-workbench/</id><summary type="html">&lt;p&gt;Growing up in the late 70s and early 80s, the only computers that were available to me
at the time were the &lt;a href="https://en.wikipedia.org/wiki/Commodore_PET"&gt;Commodore&lt;/a&gt; line of
computers locked up in schools.  To feed my growing and inquiring mind, that left
electronics and mechanics to experiment with, and expendable examples of both …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Growing up in the late 70s and early 80s, the only computers that were available to me
at the time were the &lt;a href="https://en.wikipedia.org/wiki/Commodore_PET"&gt;Commodore&lt;/a&gt; line of
computers locked up in schools.  To feed my growing and inquiring mind, that left
electronics and mechanics to experiment with, and expendable examples of both were hard
to come by.  My only choice was to scrounge around for things in various stages of
disrepair, and upon getting one of those uncommon finds, take it downstairs to our
unheated garage and trying to &amp;ldquo;fix&amp;rdquo; it.  Far from a stellar place to work, it was not
heated, not ventilated and rarely keep clean.  And at the head of that garage, on the
wall adjoining the basement, was a solitary, ugly workbench fastened to the wall.&lt;/p&gt;
&lt;p&gt;That workbench was often the birthplace of many far-fetched dreams of what I could do if
only I could properly figure the thing laid out before me.  I almost never had the right
tools, so to be totally honest, more things got &amp;ldquo;more broken&amp;rdquo; than ever got fixed or
reassembled into something else.  Even with the right tools, while I believe my ability
to make it work again would have increased, the drive and knowledge to do so was
probably not there.  But even with a veritable graveyard of things that were not
completed, I chose not to dwell on the failures or make excuses for why I didn&amp;rsquo;t finish
them.  Instead, every time I approached that bench, I chose to dream and move forward.&lt;/p&gt;
&lt;p&gt;Looking back, I fondly remember the times I stood at that bench with the single, bright
work light in my eyes.  Back then, it was always the journey and the creative
imagination that was important.  The only pressure to produce something concrete was
when my mom asked &amp;ldquo;So, what have you been working on?&amp;rdquo;  However, as I grew older, I
realized that my mom&amp;rsquo;s question was equal parts sincere interest on her part and her
desire to have me grow past that graveyard of unfinished projects.  I believe that she
wanted me to be able to channel that creativity into the something tangible. Not so she
could show off my work to others, but in a sincere effort to help me grow.&lt;/p&gt;
&lt;p&gt;Things are a lot different some 40 years later.  Even though I longer use that old
workbench, I try and capture a lot of that creativity and wonder on a daily basis, both
in my professional life and home life.  The projects I undertake are no longer
far-fetched, but grounded in reality.  As a result, I am better at selecting the projects
that I want to work on and I am more successful in carrying them to completion.
When a project fails, I embrace one of the Mythbuster&amp;rsquo;s idioms,
&lt;a href="https://mygeekwisdom.com/2016/01/09/failure-is-always-an-option/"&gt;&amp;ldquo;Failure is always an option&amp;rdquo;&lt;/a&gt;
and try and learn what failed and how to deal with it next time.  While a small number of
projects till end up in my project graveyard, but I keep the larger number of successful
projects on proud display in my workplace and my house.&lt;/p&gt;
&lt;p&gt;So why start a blog and call it &amp;ldquo;Jack&amp;rsquo;s Digital Workbench&amp;rdquo;?&lt;/p&gt;
&lt;p&gt;The simple answer is that I started blogging to help me keep a digital form of that
garage workbench alive and renewed.  I want to inspire people in the same way that my
mother has done in the past and continues to do so today.  I want to inspire people to
dream big, following each dream up with a grounding that enables them to work on that
project and gain confidence in their skills along the way.  I want to inspire people to
try and take something on, taking any failures along the way as teaching or learning
moments and not as dream killers.&lt;/p&gt;
&lt;p&gt;Basically, the reason for Jack&amp;rsquo;s Digital Workbench is to communicate with others and to
inspire them in a positive manner to allow them to, in turn, inspire the people around
them.&lt;/p&gt;</content><category term="Personal"></category></entry><entry><title>Embracing Something Hard</title><link href="https://jackdewinter.github.io/2019/08/18/embracing-something-hard/" rel="alternate"></link><published>2019-08-18T00:00:00-07:00</published><updated>2019-08-18T00:00:00-07:00</updated><author><name>Jack De Winter</name></author><id>tag:jackdewinter.github.io,2019-08-18:/2019/08/18/embracing-something-hard/</id><summary type="html">&lt;p&gt;If you look at my &lt;a href="https://www.linkedin.com/in/jackdewinter/"&gt;LinkedIn profile&lt;/a&gt;, you&amp;rsquo;ll
see that I have been around for a while.  I was a Software Developer for many years
beginning in 1991 at a small 2 person company in Waterloo,  until a stint in Denmark
gave me a bit of a wakeup call …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you look at my &lt;a href="https://www.linkedin.com/in/jackdewinter/"&gt;LinkedIn profile&lt;/a&gt;, you&amp;rsquo;ll
see that I have been around for a while.  I was a Software Developer for many years
beginning in 1991 at a small 2 person company in Waterloo,  until a stint in Denmark
gave me a bit of a wakeup call.  When I came back to the United States in January 2011, I
changed from a Software Developer to a Software Developer in Test.&lt;sup id="fnref:SDET"&gt;&lt;a class="footnote-ref" href="#fn:SDET"&gt;1&lt;/a&gt;&lt;/sup&gt;  While I started my
career &amp;ldquo;making things that work&amp;rdquo;, after 20 years I was more focused on &amp;ldquo;making things work
better.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;That career change was a wonderful and happy change for myself that I have never looked back.&lt;/p&gt;
&lt;p&gt;To be specific, I am not a tester.  I do know a lot about testing, but that is not my primary
focus.  My focus is looking at interconnected systems and figuring out how to improve them.
It is not about breaking things, like a lot of people assume, but making the team around me
better.  It is about standing up and mentioning that having 5 developers struggle through the
same setup process for 4 days each is just plain inefficient.&lt;/p&gt;
&lt;p&gt;It is about standing up and mentioning that having 5 developers struggle through the same
setup process for 4 days each is just plain inefficient.  Solution: Add a responsibility for
documenting the setup process for the first person, with each subsequent person responsible for
the process of updating the document to current standards.  Benefits: The team owns the
process and its updating, with a clear path of responsibility if it doesn&amp;rsquo;t work the next time
it is used.&lt;/p&gt;
&lt;p&gt;It is about looking holistically at a group of systems and, while developers enjoy being
creative,  focusing that creativity on the parts of the systems that will benefit them and the
team the most.  Solution: Use templates and common libraries where possible to reduce the
amount of &amp;ldquo;creativity&amp;rdquo; needed for anything remotely common to as close to zero as possible.
Benefits: The team spends time on stuff that needs to be solved and not stuff that has already
been solved.&lt;/p&gt;
&lt;p&gt;It is about asking each member of the team what they expect of documentation from the
projects that their projects rely on.  Solution: Setup a set of &amp;ldquo;how-to&amp;rdquo; guides that documents
common practices for the documentation of projects for the team, hopefully with a &amp;ldquo;dummy&amp;rdquo;
project that gives a live interpretation of those guides.  Benefits:  The team writes a set
of documentation for their systems that looks like they were written by the same team, instead
of a mish-mash of people thrown together.&lt;/p&gt;
&lt;p&gt;My job is as much about asking the simple but tough questions, as it is about having an idea
on how to respond to both the questions and answers that follow those tough questions.&lt;/p&gt;
&lt;p&gt;The actual job is almost always about automation or process, it almost always involves changing
the way people look at things, and unfortunately it almost always includes having someone&amp;rsquo;s ego
bruised along the way.  Partially due to me having Autism, I can see certain patterns very
easily, almost as if I was reading a book.  Changing the way developers look at things almost
always brings around the bruised egos.  A lot of developers associate code they write with
themselves.  As such, saying that the code or process can be improved becomes confused with
saying that the developers themselves can be improved.&lt;/p&gt;
&lt;p&gt;And yes, when that happens, it is often the people asking the questions and making
suggestions on how to make things better that take the brunt of the anger that results.&lt;/p&gt;
&lt;p&gt;I still remember my daughter asking me one time why I liked being a software developer in test,
as I am often frustrated with people over a perceived lack of momentum.  Thinking about it
quickly, the immediate answer was easy: I am good at a decent portion of it.  If you are in a
box and looking around you, all you see is the box.  I am able to elevate my perspective to a
higher level and not only see the one box, but the boxes around it.  I can see how they are
stacked, and if they are looking like they will tip over.  That came second nature to me. But
it wasn&amp;rsquo;t the complete answer.&lt;/p&gt;
&lt;p&gt;Even as I responded with that answer to my daughter, there was something
missing in that answer, and it bothered me when I thought about that conversation over the next
couple of years.&lt;/p&gt;
&lt;p&gt;It was years later during one of those teaching moments we as parents have with our children
that it occurred to me.  I was reminding one of my children that we have a saying in our
family: being knocked flat on your ass is not the last step, it&amp;rsquo;s just the step before we pick
ourselves up, brush ourselves off, and try again.  Yeah, having issues and making mistakes
sucks, but they helped make us who we are, and it&amp;rsquo;s how we stand up again that defines us.&lt;/p&gt;
&lt;p&gt;It was then that I realized: I became a software developer in test because it was hard.  I
wanted the challenge to make things better, and to help others get better at what they were
doing.  I knew I was going to encounter stubborn people along the way, but I was determined
that I would try and figure out a way to get through to them.  Sure, I get knocked flat on my
rear end a fair number of times, but I always get back up and try again.&lt;/p&gt;
&lt;p&gt;And it wasn&amp;rsquo;t just the other people, it was myself.  I had to learn when to strive for
perfection and when to strive for &amp;ldquo;just good enough&amp;rdquo;.  I had to learn to find the balance
between what I felt was the right decision and what the right decision was for the business
right now.  I had to learn that while my own passion and vision were wonderful, unless I was
able to share those things in a way that others were receptive to, they meant nothing.  I
had to learn to get in a state of continuous learning.&lt;/p&gt;
&lt;p&gt;After all that time, I finally had my answer: I liked being a Software Developer in Test
because I was good at it and because it was a hard challenge that forced me to learn and grow.&lt;/p&gt;
&lt;p&gt;That takes me to the last couple of months.&lt;/p&gt;
&lt;p&gt;For a long time I have wanted to start my own blog and help out an open source project.  I was
under no illusion that either objective was going to be easy, I just didn&amp;rsquo;t have a clue about
how different it would evolve into from what I thought it originally was.&lt;/p&gt;
&lt;p&gt;As I was going through and picking out a platform for my blog, I kept notes and started to
turn them into articles.  That was relatively easy.  Or at least the first pass was.  I found
out that when it comes to articles, I want to make sure I am saying the right thing in the
right way, and can literally spend 45 minutes working on one sentence.   Shortly after that,
I also learned that I can spend 5 minutes getting said sentence in a way that makes sense,
add text a marker like &lt;code&gt;**TBD**&lt;/code&gt; before it, and then come back to it at the end of the article.
And yes, following that, I realized that about half the time, going downstairs and doing
something totally unrelated caused me to think of &lt;strong&gt;THE EXACT&lt;/strong&gt; phrase that I needed within
seconds of coming back after the break.  Yup, learning is fun, and hindsight is perfect!&lt;/p&gt;
&lt;p&gt;This blog isn&amp;rsquo;t hard in terms of writing for me, but the production of it sometimes gets me.
If you want to stay on track, you have to give yourself some kind of schedule.  For me it
was to publish once a week on something technical.  It is a challenge to always make sure you
have a couple of articles on the go at any time, and that you can polish one up and
publish it on a weekly basis.  I also have to balance the writing with exploring stuff so that
I can write about it in my blog.  And I realized I have to extend that out 4-6 weeks to give
me time to go through a good ideation process.&lt;/p&gt;
&lt;p&gt;In picking a theme for my website, my attention was drawn to the Elegant theme for its
simplicity and crispness.  Looking into the documentation a bit, I noticed that some things
were close, but not spot on.  I wanted to get one of those features working for my website,
so asking for some help getting it working, I changed the document to better document what
needed to be done.  The change was welcomed, and I volunteered to help out with any other
articles.  That is how I started contributing to the Elegant theme.&lt;/p&gt;
&lt;p&gt;What does it entail?  Take the work I am doing for my blog articles, subtract the subject
matter research, in certain cases add some localized research, and supplement that with making
sure I write the articles in a more professional and international. &lt;sup id="fnref:International-Tone"&gt;&lt;a class="footnote-ref" href="#fn:International-Tone"&gt;2&lt;/a&gt;&lt;/sup&gt;
On top of that, apply a bit of my developer in test training and try and make sure I have a
solid theme, and that I am making the process easier for me and other users of Elegant in the
process.&lt;/p&gt;
&lt;p&gt;For sure, doing these things at the same time can be nuts, but I am thoroughly enjoying the
challenge.  I am growing both personally and professionally as I work though things on each
project, some inside of my expertise and some outside of it.&lt;/p&gt;
&lt;p&gt;Sometimes I wish there were more hours in the day, but I wouldn&amp;rsquo;t trade the learning I am doing
for the world.&lt;/p&gt;
&lt;p&gt;Yeah, it&amp;rsquo;s quite often hard, but it wouldn&amp;rsquo;t be worth it if it wasn&amp;rsquo;t hard,
would it?&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:SDET"&gt;
&lt;p&gt;In the United States, where I currently live, I am a Software Development Engineer in Test or SDET.  I do not have an engineering degree.  In any other country, including my native Canada, I am a Software Developer in Test or SDT.&amp;#160;&lt;a class="footnote-backref" href="#fnref:SDET" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:International-Tone"&gt;
&lt;p&gt;I will probably write an upcoming article about this to explain it fully.  In essence, if you are writing in English for an international audience, you have to remember that a fair percentage of your readers are not native English speakers.  Until they reach a point in their English proficiency, they will typically think in their native language and translate what they are reading from English to that native language.  As such, you want to keep your language as free from idioms and imprecision as possible.&amp;#160;&lt;a class="footnote-backref" href="#fnref:International-Tone" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Personal"></category><category term="trying your best"></category><category term="trying something new"></category><category term="teachable moments"></category><category term="what are SDETs"></category><category term="teaching software quality"></category></entry></feed>